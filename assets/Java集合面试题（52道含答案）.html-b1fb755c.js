const e=JSON.parse('{"key":"v-6fc213ba","path":"/guide/markdown/Java%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B8/Java%E9%9B%86%E5%90%88%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8852%E9%81%93%E5%90%AB%E7%AD%94%E6%A1%88%EF%BC%89.html","title":"","lang":"zh-CN","frontmatter":{"description":"目录 一、集合容器概述 1. 什么是集合 2. 集合的特点 3. 集合和数组的区别 4. 使用集合框架的好处 5. 常用的集合类有哪些？ 6. List，Set，Map三者的区别？ 7. 集合框架底层数据结构 8. 哪些集合类是线程安全的？ 9. Java集合的快速失败机制 “fail-fast”？ 10. 怎么确保一个集合不能被修改？ 二、Collection接口 List接口 11. 迭代器 Iterator 是什么？ 12. Iterator 怎么使用？有什么特点？ 13. 如何边遍历边移除 Collection 中的元素？ 14. Iterator 和 ListIterator 有什么区别？ 15. 遍历一个 List 有哪些不同的方式？每种方法的实现原理是什么？Java 中 List遍历的最佳实践是什么？ 16. 说一下 ArrayList 的优缺点 17. 如何实现数组和 List 之间的转换？ 18. ArrayList 和 LinkedList 的区别是什么？ 19. ArrayList 和 Vector 的区别是什么？ 20. 插入数据时，ArrayList、LinkedList、Vector谁速度较快？阐述 21. 多线程场景下如何使用 ArrayList？ 22. 为什么 ArrayList 的 elementData 加上 transient 修饰？ 23. List 和 Set 的区别 Set接口 24. 说一下 HashSet 的实现原理？ 25. HashSet如何检查重复？HashSet是如何保证数据不可重复的？ 26. HashSet与HashMap的区别 三、Map接口 27. 什么是Hash算法 28. 什么是链表 29. 说一下HashMap的实现原理？ 30. HashMap在JDK1.7和JDK1.8中有哪些不同？HashMap的底层实现 31. 什么是红黑树 32. HashMap的put方法的具体流程？ 33. HashMap的扩容操作是怎么实现的？ 34. HashMap是怎么解决哈希冲突的？ 35. 能否使用任何类作为 Map 的 key？ 36. 为什么HashMap中String、Integer这样的包装类适合作为K？ 37. 如果使用Object作为HashMap的Key，应该怎么办呢？ 38. HashMap为什么不直接使用hashCode()处理后的哈希值直接作为table的下标？ 39. HashMap 的长度为什么是2的幂次方 40. HashMap 与 HashTable 有什么区别？ 41. 什么是TreeMap 简介 42. 如何决定使用 HashMap 还是 TreeMap？ 43. HashMap 和 ConcurrentHashMap 的区别 44. ConcurrentHashMap 和 Hashtable 的区别？ 45. ConcurrentHashMap 底层具体实现知道吗？实现原理是什么？ 四、辅助工具类 46. Array 和 ArrayList 有何区别？ 47. 如何实现 Array 和 List 之间的转换？ 48. comparable 和 comparator的区别？ 49. Collection 和 Collections 有什么区别？ 50. TreeMap 和 TreeSet 在排序时如何比较元素？Collections 工具类中的 sort()方法如何比较元素？ 51. Collection 和 Collections 有什么区别？ 52. TreeMap 和 TreeSet 在排序时如何比较元素？Collections 工具类中的 sort()方法如何比较元素？","head":[["meta",{"property":"og:url","content":"https://www.icu-web.tk/vuepress-doc/guide/markdown/Java%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B8/Java%E9%9B%86%E5%90%88%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8852%E9%81%93%E5%90%AB%E7%AD%94%E6%A1%88%EF%BC%89.html"}],["meta",{"property":"og:site_name","content":"折戟沉沙、丿"}],["meta",{"property":"og:description","content":"目录 一、集合容器概述 1. 什么是集合 2. 集合的特点 3. 集合和数组的区别 4. 使用集合框架的好处 5. 常用的集合类有哪些？ 6. List，Set，Map三者的区别？ 7. 集合框架底层数据结构 8. 哪些集合类是线程安全的？ 9. Java集合的快速失败机制 “fail-fast”？ 10. 怎么确保一个集合不能被修改？ 二、Collection接口 List接口 11. 迭代器 Iterator 是什么？ 12. Iterator 怎么使用？有什么特点？ 13. 如何边遍历边移除 Collection 中的元素？ 14. Iterator 和 ListIterator 有什么区别？ 15. 遍历一个 List 有哪些不同的方式？每种方法的实现原理是什么？Java 中 List遍历的最佳实践是什么？ 16. 说一下 ArrayList 的优缺点 17. 如何实现数组和 List 之间的转换？ 18. ArrayList 和 LinkedList 的区别是什么？ 19. ArrayList 和 Vector 的区别是什么？ 20. 插入数据时，ArrayList、LinkedList、Vector谁速度较快？阐述 21. 多线程场景下如何使用 ArrayList？ 22. 为什么 ArrayList 的 elementData 加上 transient 修饰？ 23. List 和 Set 的区别 Set接口 24. 说一下 HashSet 的实现原理？ 25. HashSet如何检查重复？HashSet是如何保证数据不可重复的？ 26. HashSet与HashMap的区别 三、Map接口 27. 什么是Hash算法 28. 什么是链表 29. 说一下HashMap的实现原理？ 30. HashMap在JDK1.7和JDK1.8中有哪些不同？HashMap的底层实现 31. 什么是红黑树 32. HashMap的put方法的具体流程？ 33. HashMap的扩容操作是怎么实现的？ 34. HashMap是怎么解决哈希冲突的？ 35. 能否使用任何类作为 Map 的 key？ 36. 为什么HashMap中String、Integer这样的包装类适合作为K？ 37. 如果使用Object作为HashMap的Key，应该怎么办呢？ 38. HashMap为什么不直接使用hashCode()处理后的哈希值直接作为table的下标？ 39. HashMap 的长度为什么是2的幂次方 40. HashMap 与 HashTable 有什么区别？ 41. 什么是TreeMap 简介 42. 如何决定使用 HashMap 还是 TreeMap？ 43. HashMap 和 ConcurrentHashMap 的区别 44. ConcurrentHashMap 和 Hashtable 的区别？ 45. ConcurrentHashMap 底层具体实现知道吗？实现原理是什么？ 四、辅助工具类 46. Array 和 ArrayList 有何区别？ 47. 如何实现 Array 和 List 之间的转换？ 48. comparable 和 comparator的区别？ 49. Collection 和 Collections 有什么区别？ 50. TreeMap 和 TreeSet 在排序时如何比较元素？Collections 工具类中的 sort()方法如何比较元素？ 51. Collection 和 Collections 有什么区别？ 52. TreeMap 和 TreeSet 在排序时如何比较元素？Collections 工具类中的 sort()方法如何比较元素？"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-05T14:04:17.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-05T14:04:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-05T14:04:17.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":3,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":2,"title":"一、集合容器概述","slug":"一、集合容器概述","link":"#一、集合容器概述","children":[]},{"level":2,"title":"1. 什么是集合","slug":"_1-什么是集合","link":"#_1-什么是集合","children":[]},{"level":2,"title":"2. 集合的特点","slug":"_2-集合的特点","link":"#_2-集合的特点","children":[]},{"level":2,"title":"3. 集合和数组的区别","slug":"_3-集合和数组的区别","link":"#_3-集合和数组的区别","children":[]},{"level":2,"title":"4. 使用集合框架的好处","slug":"_4-使用集合框架的好处","link":"#_4-使用集合框架的好处","children":[]},{"level":2,"title":"5. 常用的集合类有哪些？","slug":"_5-常用的集合类有哪些","link":"#_5-常用的集合类有哪些","children":[]},{"level":2,"title":"6. List，Set，Map三者的区别？","slug":"_6-list-set-map三者的区别","link":"#_6-list-set-map三者的区别","children":[]},{"level":2,"title":"7. 集合框架底层数据结构","slug":"_7-集合框架底层数据结构","link":"#_7-集合框架底层数据结构","children":[]},{"level":2,"title":"8. 哪些集合类是线程安全的？","slug":"_8-哪些集合类是线程安全的","link":"#_8-哪些集合类是线程安全的","children":[]},{"level":2,"title":"9. Java集合的快速失败机制 “fail-fast”？","slug":"_9-java集合的快速失败机制-fail-fast","link":"#_9-java集合的快速失败机制-fail-fast","children":[]},{"level":2,"title":"10. 怎么确保一个集合不能被修改？","slug":"_10-怎么确保一个集合不能被修改","link":"#_10-怎么确保一个集合不能被修改","children":[]},{"level":2,"title":"二、Collection接口","slug":"二、collection接口","link":"#二、collection接口","children":[]},{"level":2,"title":"List接口","slug":"list接口","link":"#list接口","children":[{"level":3,"title":"11. 迭代器 Iterator 是什么？","slug":"_11-迭代器-iterator-是什么","link":"#_11-迭代器-iterator-是什么","children":[]},{"level":3,"title":"12. Iterator 怎么使用？有什么特点？","slug":"_12-iterator-怎么使用-有什么特点","link":"#_12-iterator-怎么使用-有什么特点","children":[]},{"level":3,"title":"13. 如何边遍历边移除 Collection 中的元素？","slug":"_13-如何边遍历边移除-collection-中的元素","link":"#_13-如何边遍历边移除-collection-中的元素","children":[]},{"level":3,"title":"14. Iterator 和 ListIterator 有什么区别？","slug":"_14-iterator-和-listiterator-有什么区别","link":"#_14-iterator-和-listiterator-有什么区别","children":[]},{"level":3,"title":"15. 遍历一个 List 有哪些不同的方式？每种方法的实现原理是什么？Java 中 List遍历的最佳实践是什么？","slug":"_15-遍历一个-list-有哪些不同的方式-每种方法的实现原理是什么-java-中-list遍历的最佳实践是什么","link":"#_15-遍历一个-list-有哪些不同的方式-每种方法的实现原理是什么-java-中-list遍历的最佳实践是什么","children":[]},{"level":3,"title":"16. 说一下 ArrayList 的优缺点","slug":"_16-说一下-arraylist-的优缺点","link":"#_16-说一下-arraylist-的优缺点","children":[]},{"level":3,"title":"17. 如何实现数组和 List 之间的转换？","slug":"_17-如何实现数组和-list-之间的转换","link":"#_17-如何实现数组和-list-之间的转换","children":[]},{"level":3,"title":"18. ArrayList 和 LinkedList 的区别是什么？","slug":"_18-arraylist-和-linkedlist-的区别是什么","link":"#_18-arraylist-和-linkedlist-的区别是什么","children":[]},{"level":3,"title":"19. ArrayList 和 Vector 的区别是什么？","slug":"_19-arraylist-和-vector-的区别是什么","link":"#_19-arraylist-和-vector-的区别是什么","children":[]},{"level":3,"title":"20. 插入数据时，ArrayList、LinkedList、Vector谁速度较快？阐述","slug":"_20-插入数据时-arraylist、linkedlist、vector谁速度较快-阐述","link":"#_20-插入数据时-arraylist、linkedlist、vector谁速度较快-阐述","children":[]},{"level":3,"title":"21. 多线程场景下如何使用 ArrayList？","slug":"_21-多线程场景下如何使用-arraylist","link":"#_21-多线程场景下如何使用-arraylist","children":[]},{"level":3,"title":"22. 为什么 ArrayList 的 elementData 加上 transient 修饰？","slug":"_22-为什么-arraylist-的-elementdata-加上-transient-修饰","link":"#_22-为什么-arraylist-的-elementdata-加上-transient-修饰","children":[]},{"level":3,"title":"23. List 和 Set 的区别","slug":"_23-list-和-set-的区别","link":"#_23-list-和-set-的区别","children":[]}]},{"level":2,"title":"Set接口","slug":"set接口","link":"#set接口","children":[{"level":3,"title":"24. 说一下 HashSet 的实现原理？","slug":"_24-说一下-hashset-的实现原理","link":"#_24-说一下-hashset-的实现原理","children":[]},{"level":3,"title":"25. HashSet如何检查重复？HashSet是如何保证数据不可重复的？","slug":"_25-hashset如何检查重复-hashset是如何保证数据不可重复的","link":"#_25-hashset如何检查重复-hashset是如何保证数据不可重复的","children":[]},{"level":3,"title":"26. HashSet与HashMap的区别","slug":"_26-hashset与hashmap的区别","link":"#_26-hashset与hashmap的区别","children":[]}]},{"level":2,"title":"三、Map接口","slug":"三、map接口","link":"#三、map接口","children":[]},{"level":2,"title":"27. 什么是Hash算法","slug":"_27-什么是hash算法","link":"#_27-什么是hash算法","children":[]},{"level":2,"title":"28. 什么是链表","slug":"_28-什么是链表","link":"#_28-什么是链表","children":[]},{"level":2,"title":"29. 说一下HashMap的实现原理？","slug":"_29-说一下hashmap的实现原理","link":"#_29-说一下hashmap的实现原理","children":[]},{"level":2,"title":"30. HashMap在JDK1.7和JDK1.8中有哪些不同？HashMap的底层实现","slug":"_30-hashmap在jdk1-7和jdk1-8中有哪些不同-hashmap的底层实现","link":"#_30-hashmap在jdk1-7和jdk1-8中有哪些不同-hashmap的底层实现","children":[]},{"level":2,"title":"31. 什么是红黑树","slug":"_31-什么是红黑树","link":"#_31-什么是红黑树","children":[]},{"level":2,"title":"32. HashMap的put方法的具体流程？","slug":"_32-hashmap的put方法的具体流程","link":"#_32-hashmap的put方法的具体流程","children":[]},{"level":2,"title":"33. HashMap的扩容操作是怎么实现的？","slug":"_33-hashmap的扩容操作是怎么实现的","link":"#_33-hashmap的扩容操作是怎么实现的","children":[]},{"level":2,"title":"34. HashMap是怎么解决哈希冲突的？","slug":"_34-hashmap是怎么解决哈希冲突的","link":"#_34-hashmap是怎么解决哈希冲突的","children":[]},{"level":2,"title":"35. 能否使用任何类作为 Map 的 key？","slug":"_35-能否使用任何类作为-map-的-key","link":"#_35-能否使用任何类作为-map-的-key","children":[]},{"level":2,"title":"36. 为什么HashMap中String、Integer这样的包装类适合作为K？","slug":"_36-为什么hashmap中string、integer这样的包装类适合作为k","link":"#_36-为什么hashmap中string、integer这样的包装类适合作为k","children":[]},{"level":2,"title":"37. 如果使用Object作为HashMap的Key，应该怎么办呢？","slug":"_37-如果使用object作为hashmap的key-应该怎么办呢","link":"#_37-如果使用object作为hashmap的key-应该怎么办呢","children":[]},{"level":2,"title":"38. HashMap为什么不直接使用hashCode()处理后的哈希值直接作为table的下标？","slug":"_38-hashmap为什么不直接使用hashcode-处理后的哈希值直接作为table的下标","link":"#_38-hashmap为什么不直接使用hashcode-处理后的哈希值直接作为table的下标","children":[]},{"level":2,"title":"39. HashMap 的长度为什么是2的幂次方","slug":"_39-hashmap-的长度为什么是2的幂次方","link":"#_39-hashmap-的长度为什么是2的幂次方","children":[]},{"level":2,"title":"40. HashMap 与 HashTable 有什么区别？","slug":"_40-hashmap-与-hashtable-有什么区别","link":"#_40-hashmap-与-hashtable-有什么区别","children":[]},{"level":2,"title":"41. 什么是TreeMap 简介","slug":"_41-什么是treemap-简介","link":"#_41-什么是treemap-简介","children":[]},{"level":2,"title":"42. 如何决定使用 HashMap 还是 TreeMap？","slug":"_42-如何决定使用-hashmap-还是-treemap","link":"#_42-如何决定使用-hashmap-还是-treemap","children":[]},{"level":2,"title":"43. HashMap 和 ConcurrentHashMap 的区别","slug":"_43-hashmap-和-concurrenthashmap-的区别","link":"#_43-hashmap-和-concurrenthashmap-的区别","children":[]},{"level":2,"title":"44. ConcurrentHashMap 和 Hashtable 的区别？","slug":"_44-concurrenthashmap-和-hashtable-的区别","link":"#_44-concurrenthashmap-和-hashtable-的区别","children":[]},{"level":2,"title":"45. ConcurrentHashMap 底层具体实现知道吗？实现原理是什么？","slug":"_45-concurrenthashmap-底层具体实现知道吗-实现原理是什么","link":"#_45-concurrenthashmap-底层具体实现知道吗-实现原理是什么","children":[]},{"level":2,"title":"四、辅助工具类","slug":"四、辅助工具类","link":"#四、辅助工具类","children":[]},{"level":2,"title":"46. Array 和 ArrayList 有何区别？","slug":"_46-array-和-arraylist-有何区别","link":"#_46-array-和-arraylist-有何区别","children":[]},{"level":2,"title":"47. 如何实现 Array 和 List 之间的转换？","slug":"_47-如何实现-array-和-list-之间的转换","link":"#_47-如何实现-array-和-list-之间的转换","children":[]},{"level":2,"title":"48. comparable 和 comparator的区别？","slug":"_48-comparable-和-comparator的区别","link":"#_48-comparable-和-comparator的区别","children":[]},{"level":2,"title":"49. Collection 和 Collections 有什么区别？","slug":"_49-collection-和-collections-有什么区别","link":"#_49-collection-和-collections-有什么区别","children":[]},{"level":2,"title":"50. TreeMap 和 TreeSet 在排序时如何比较元素？Collections 工具类中的 sort()方法如何比较元素？","slug":"_50-treemap-和-treeset-在排序时如何比较元素-collections-工具类中的-sort-方法如何比较元素","link":"#_50-treemap-和-treeset-在排序时如何比较元素-collections-工具类中的-sort-方法如何比较元素","children":[]},{"level":2,"title":"51. Collection 和 Collections 有什么区别？","slug":"_51-collection-和-collections-有什么区别","link":"#_51-collection-和-collections-有什么区别","children":[]},{"level":2,"title":"52. TreeMap 和 TreeSet 在排序时如何比较元素？Collections 工具类中的 sort()方法如何比较元素？","slug":"_52-treemap-和-treeset-在排序时如何比较元素-collections-工具类中的-sort-方法如何比较元素","link":"#_52-treemap-和-treeset-在排序时如何比较元素-collections-工具类中的-sort-方法如何比较元素","children":[]}],"git":{"createdTime":1693922657000,"updatedTime":1693922657000,"contributors":[{"name":"bincooo","email":"admin@bincooodeiMac.local","commits":1}]},"readingTime":{"minutes":44.97,"words":13492},"filePathRelative":"guide/markdown/Java面试宝典/Java集合面试题（52道含答案）.md","localizedDate":"2023年9月5日","excerpt":"<h3> 目录</h3>\\n<ul>\\n<li><a href=\\"#_2\\">一、集合容器概述</a></li>\\n<li>\\n<ul>\\n<li><a href=\\"#1__3\\">1. 什么是集合</a></li>\\n<li><a href=\\"#2__8\\">2. 集合的特点</a></li>\\n<li><a href=\\"#3__13\\">3. 集合和数组的区别</a></li>\\n<li><a href=\\"#4__18\\">4. 使用集合框架的好处</a></li>\\n<li><a href=\\"#5__24\\">5. 常用的集合类有哪些？</a></li>\\n<li><a href=\\"#6_ListSetMap_31\\">6. List，Set，Map三者的区别？</a></li>\\n<li><a href=\\"#7__45\\">7. 集合框架底层数据结构</a></li>\\n<li><a href=\\"#8__67\\">8. 哪些集合类是线程安全的？</a></li>\\n<li><a href=\\"#9_Java_failfast_73\\">9. Java集合的快速失败机制 “fail-fast”？</a></li>\\n<li><a href=\\"#10__87\\">10. 怎么确保一个集合不能被修改？</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#Collection_101\\">二、Collection接口</a></li>\\n<li>\\n<ul>\\n<li><a href=\\"#List_102\\">List接口</a></li>\\n<li>\\n<ul>\\n<li><a href=\\"#11__Iterator__103\\">11. 迭代器 Iterator 是什么？</a></li>\\n<li><a href=\\"#12_Iterator__114\\">12. Iterator 怎么使用？有什么特点？</a></li>\\n<li><a href=\\"#13__Collection__127\\">13. 如何边遍历边移除 Collection 中的元素？</a></li>\\n<li><a href=\\"#14_Iterator__ListIterator__146\\">14. Iterator 和 ListIterator 有什么区别？</a></li>\\n<li><a href=\\"#15__List_Java__List_152\\">15. 遍历一个 List 有哪些不同的方式？每种方法的实现原理是什么？Java 中 List遍历的最佳实践是什么？</a></li>\\n<li><a href=\\"#16__ArrayList__164\\">16. 说一下 ArrayList 的优缺点</a></li>\\n<li><a href=\\"#17__List__174\\">17. 如何实现数组和 List 之间的转换？</a></li>\\n<li><a href=\\"#18_ArrayList__LinkedList__190\\">18. ArrayList 和 LinkedList 的区别是什么？</a></li>\\n<li><a href=\\"#19_ArrayList__Vector__199\\">19. ArrayList 和 Vector 的区别是什么？</a></li>\\n<li><a href=\\"#20_ArrayListLinkedListVector_207\\">20. 插入数据时，ArrayList、LinkedList、Vector谁速度较快？阐述</a></li>\\n<li><a href=\\"#21__ArrayList_213\\">21. 多线程场景下如何使用 ArrayList？</a></li>\\n<li><a href=\\"#22__ArrayList__elementData__transient__224\\">22. 为什么 ArrayList 的 elementData 加上 transient 修饰？</a></li>\\n<li><a href=\\"#23_List__Set__250\\">23. List 和 Set 的区别</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#Set_259\\">Set接口</a></li>\\n<li>\\n<ul>\\n<li><a href=\\"#24__HashSet__260\\">24. 说一下 HashSet 的实现原理？</a></li>\\n<li><a href=\\"#25_HashSetHashSet_263\\">25. HashSet如何检查重复？HashSet是如何保证数据不可重复的？</a></li>\\n<li><a href=\\"#26_HashSetHashMap_292\\">26. HashSet与HashMap的区别</a></li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li><a href=\\"#Map_303\\">三、Map接口</a></li>\\n<li>\\n<ul>\\n<li><a href=\\"#27_Hash_304\\">27. 什么是Hash算法</a></li>\\n<li><a href=\\"#28__307\\">28. 什么是链表</a></li>\\n<li><a href=\\"#29_HashMap_322\\">29. 说一下HashMap的实现原理？</a></li>\\n<li><a href=\\"#30_HashMapJDK17JDK18HashMap_335\\">30. HashMap在JDK1.7和JDK1.8中有哪些不同？HashMap的底层实现</a></li>\\n<li><a href=\\"#31__362\\">31. 什么是红黑树</a></li>\\n<li><a href=\\"#32_HashMapput_382\\">32. HashMap的put方法的具体流程？</a></li>\\n<li><a href=\\"#33_HashMap_510\\">33. HashMap的扩容操作是怎么实现的？</a></li>\\n<li><a href=\\"#34_HashMap_522\\">34. HashMap是怎么解决哈希冲突的？</a></li>\\n<li><a href=\\"#35__Map__key_568\\">35. 能否使用任何类作为 Map 的 key？</a></li>\\n<li><a href=\\"#36_HashMapStringIntegerK_575\\">36. 为什么HashMap中String、Integer这样的包装类适合作为K？</a></li>\\n<li><a href=\\"#37_ObjectHashMapKey_581\\">37. 如果使用Object作为HashMap的Key，应该怎么办呢？</a></li>\\n<li><a href=\\"#38_HashMaphashCodetable_586\\">38. HashMap为什么不直接使用hashCode()处理后的哈希值直接作为table的下标？</a></li>\\n<li><a href=\\"#39_HashMap_2_595\\">39. HashMap 的长度为什么是2的幂次方</a></li>\\n<li><a href=\\"#40_HashMap__HashTable__607\\">40. HashMap 与 HashTable 有什么区别？</a></li>\\n<li><a href=\\"#41_TreeMap__626\\">41. 什么是TreeMap 简介</a></li>\\n<li><a href=\\"#42__HashMap__TreeMap_632\\">42. 如何决定使用 HashMap 还是 TreeMap？</a></li>\\n<li><a href=\\"#43_HashMap__ConcurrentHashMap__637\\">43. HashMap 和 ConcurrentHashMap 的区别</a></li>\\n<li><a href=\\"#44_ConcurrentHashMap__Hashtable__644\\">44. ConcurrentHashMap 和 Hashtable 的区别？</a></li>\\n<li><a href=\\"#45_ConcurrentHashMap__664\\">45. ConcurrentHashMap 底层具体实现知道吗？实现原理是什么？</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#_722\\">四、辅助工具类</a></li>\\n<li>\\n<ul>\\n<li><a href=\\"#46_Array__ArrayList__723\\">46. Array 和 ArrayList 有何区别？</a></li>\\n<li><a href=\\"#47__Array__List__729\\">47. 如何实现 Array 和 List 之间的转换？</a></li>\\n<li><a href=\\"#48_comparable__comparator_733\\">48. comparable 和 comparator的区别？</a></li>\\n<li><a href=\\"#49_Collection__Collections__738\\">49. Collection 和 Collections 有什么区别？</a></li>\\n<li><a href=\\"#50_TreeMap__TreeSet_Collections__sort_745\\">50. TreeMap 和 TreeSet 在排序时如何比较元素？Collections 工具类中的 sort()方法如何比较元素？</a></li>\\n<li><a href=\\"#51_Collection__Collections__755\\">51. Collection 和 Collections 有什么区别？</a></li>\\n<li><a href=\\"#52_TreeMap__TreeSet_Collections__sort_762\\">52. TreeMap 和 TreeSet 在排序时如何比较元素？Collections 工具类中的 sort()方法如何比较元素？</a></li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}');export{e as data};
