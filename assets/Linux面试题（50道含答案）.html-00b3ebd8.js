import{_ as i,E as l,Z as t,$ as r,a0 as n,a3 as e,a1 as s,a4 as d}from"./framework-e0d053a9.js";const o={},c=d(`<h3 id="目录" tabindex="-1"><a class="header-anchor" href="#目录" aria-hidden="true">#</a> 目录</h3><ul><li><a href="#Linux__2">一、Linux 概述</a></li><li><ul><li><a href="#1_Linux_3">1. 什么是Linux</a></li><li><a href="#2_WindowsLinux_9">2. Windows和Linux的区别</a></li><li><a href="#3_UnixLinux_17">3. Unix和Linux有什么区别？</a></li><li><a href="#4__Linux__39">4. 什么是 Linux 内核？</a></li><li><a href="#5_Linux_47">5. Linux的基本组件是什么？</a></li><li><a href="#6_Linux__52">6. Linux 的体系结构</a></li><li><a href="#7_BASHDOS_67">7. BASH和DOS之间的基本区别是什么？</a></li><li><a href="#8_Linux__75">8. Linux 开机启动过程？</a></li><li><a href="#9_Linux_84">9. Linux系统缺省的运行级别？</a></li><li><a href="#10_Linux__93">10. Linux 使用的进程间通信方式？</a></li><li><a href="#11_Linux__102">11. Linux 有哪些系统日志文件？</a></li><li><a href="#12_Linux_107">12. Linux系统安装多个桌面环境有帮助吗？</a></li><li><a href="#13__112">13. 什么是交换空间？</a></li><li><a href="#14_root_116">14. 什么是root帐户</a></li><li><a href="#15_LILO_120">15. 什么是LILO？</a></li><li><a href="#16_BASH_123">16. 什么是BASH？</a></li><li><a href="#17_CLI_128">17. 什么是CLI？</a></li><li><a href="#18_GUI_137">18. 什么是GUI？</a></li><li><a href="#19__144">19. 开源的优势是什么？</a></li><li><a href="#20_GNU_149">20. GNU项目的重要性是什么？</a></li></ul></li><li><a href="#_155">二、磁盘、目录、文件</a></li><li><ul><li><a href="#21__Linux__156">21. 简单 Linux 文件系统？</a></li><li><a href="#22_Linux__165">22. Linux 的目录结构是怎样的？</a></li><li><a href="#23__inode__189">23. 什么是 inode ？</a></li><li><a href="#24__213">24. 什么是硬链接和软链接？</a></li><li><a href="#25_RAID__231">25. RAID 是什么?</a></li></ul></li><li><a href="#_241">三、安全</a></li><li><ul><li><a href="#26__Linux__242">26. 一台 Linux 系统初始化环境后需要做一些什么安全工作？</a></li><li><a href="#27__CC__DDOS__256">27. 什么叫 CC 攻击？什么叫 DDOS 攻击？</a></li><li><a href="#28__268">28. 什么是网站数据库注入？</a></li><li><a href="#29_Shell__279">29. Shell 脚本是什么？</a></li></ul></li><li><a href="#_284">四、实战</a></li><li><ul><li><a href="#30_Linux__286">30.如何选择 Linux 操作系统版本?</a></li><li><a href="#31__Linux__297">31. 如何规划一台 Linux 主机，步骤是怎样？</a></li><li><a href="#32__303">32. 请问当用户反馈网站访问慢，你会如何处理？</a></li><li><a href="#33_Linux__347">33. Linux 性能调优都有哪几种方法？</a></li><li><a href="#34__357">34. 基本命令</a></li></ul></li></ul><h2 id="一、linux-概述" tabindex="-1"><a class="header-anchor" href="#一、linux-概述" aria-hidden="true">#</a> 一、Linux 概述</h2><h2 id="_1-什么是linux" tabindex="-1"><a class="header-anchor" href="#_1-什么是linux" aria-hidden="true">#</a> 1. 什么是Linux</h2><ul><li>Linux是一套免费使用和自由传播的类似Unix操作系统，一般的WEB项目都是部署都是放在Linux<br> 操作系统上面。 Linux是一个基于POSIX和Unix的多用户、多任务、支持多线程和多CPU的操作系<br> 统。它能运行主要的Unix工具软件、应用程序和网络协议。它支持32位和64位硬件。Linux继承了<br> Unix以网络为核心的设计思想，是一个性能稳定的多用户网络操作系统。</li></ul><h2 id="_2-windows和linux的区别" tabindex="-1"><a class="header-anchor" href="#_2-windows和linux的区别" aria-hidden="true">#</a> 2. Windows和Linux的区别</h2><ul><li>Windows是微软开发的操作系统，民用操作系统，可用于娱乐、影音、上网。 Windows操作系统<br> 具有强大的日志记录系统和强大的桌面应用。好处是它可以帮我们实现非常多绚丽多彩的效果，可<br> 以非常方便去进行娱乐、影音、上网。</li><li>Linux的应用相对单纯很多，没有什么绚丽多彩的效果，因此Linux的性能是非常出色的，可以完<br> 全针对机器的配置有针对性的优化，</li><li>简单来说Windows适合普通用户进行娱乐办公使用，Linux适合软件开发部署</li></ul><h2 id="_3-unix和linux有什么区别" tabindex="-1"><a class="header-anchor" href="#_3-unix和linux有什么区别" aria-hidden="true">#</a> 3. Unix和Linux有什么区别？</h2><ul><li>Linux和Unix都是功能强大的操作系统，都是应用广泛的服务器操作系统，有很多相似之处，甚至<br> 有一部分人错误地认为Unix和Linux操作系统是一样的，然而，事实并非如此，以下是两者的区<br> 别。</li></ul><ol><li><strong>开源性</strong><br> Linux是一款开源操作系统，不需要付费，即可使用；Unix是一款对源码实行知识产权保护的<br> 传统商业软件，使用需要付费授权使用。</li><li><strong>跨平台性</strong><br> Linux操作系统具有良好的跨平台性能，可运行在多种硬件平台上；Unix操作系统跨平台性能<br> 较弱，大多需与硬件配套使用。</li><li><strong>可视化界面</strong><br> Linux除了进行命令行操作，还有窗体管理系统；Unix只是命令行下的系统。</li><li><strong>硬件环境</strong><br> Linux操作系统对硬件的要求较低，安装方法更易掌握；Unix对硬件要求比较苛刻，按照难度<br> 较大。</li><li><strong>用户群体</strong><br> Linux的用户群体很广泛，个人和企业均可使用；Unix的用户群体比较窄，多是安全性要求高<br> 的大型企业使用，如银行、电信部门等，或者Unix硬件厂商使用，如Sun等。<br> 相比于Unix操作系统，Linux操作系统更受广大计算机爱好者的喜爱，主要原因是Linux操作<br> 系统具有Unix操作系统的全部功能，并且能够在普通PC计算机上实现全部的Unix特性，开源<br> 免费的特性，更容易普及使用！</li></ol><h2 id="_4-什么是-linux-内核" tabindex="-1"><a class="header-anchor" href="#_4-什么是-linux-内核" aria-hidden="true">#</a> 4. 什么是 Linux 内核？</h2><ul><li>Linux 系统的核心是内核。内核控制着计算机系统上的所有硬件和软件，在必要时分配硬件，并根<br> 据需要执行软件。</li></ul><ol><li>系统内存管理</li><li>应用程序管理</li><li>硬件设备管理</li><li>文件系统管理</li></ol><h2 id="_5-linux的基本组件是什么" tabindex="-1"><a class="header-anchor" href="#_5-linux的基本组件是什么" aria-hidden="true">#</a> 5. Linux的基本组件是什么？</h2><ul><li>就像任何其他典型的操作系统一样，Linux拥有所有这些组件：内核，shell和GUI，系统实用程序<br> 和应用程序。Linux比其他操作系统更具优势的是每个方面都附带其他功能，所有代码都可以免费<br> 下载。</li></ul><h2 id="_6-linux-的体系结构" tabindex="-1"><a class="header-anchor" href="#_6-linux-的体系结构" aria-hidden="true">#</a> 6. Linux 的体系结构</h2><ul><li>从大的方面讲，Linux 体系结构可以分为两块：<br><img src="https://img-blog.csdnimg.cn/14a28a42a53b48a1bd5f99a66ca657ff.png" alt="在这里插入图片描述" loading="lazy"></li><li>用户空间(User Space) ：用户空间又包括用户的应用程序(User Applications)、C 库(C Library) 。</li><li>内核空间(Kernel Space) ：内核空间又包括系统调用接口(System Call Interface)、内核(Kernel)、<br> 平台架构相关的代码(Architecture-Dependent Kernel Code) 。</li></ul><p><strong>为什么 Linux 体系结构要分为用户空间和内核空间的原因？</strong><br> 1、现代 CPU 实现了不同的工作模式，不同模式下 CPU 可以执行的指令和访问的寄存器不同。<br> 2、Linux 从 CPU 的角度出发，为了保护内核的安全，把系统分成了两部分。</p><ul><li>用户空间和内核空间是程序执行的两种不同的状态，我们可以通过两种方式完成用户空间到内核空<br> 间的转移： <ul><li>系统调用；</li><li>硬件中断。</li></ul></li></ul><h2 id="_7-bash和dos之间的基本区别是什么" tabindex="-1"><a class="header-anchor" href="#_7-bash和dos之间的基本区别是什么" aria-hidden="true">#</a> 7. BASH和DOS之间的基本区别是什么？</h2><ul><li>BASH和DOS控制台之间的主要区别在于3个方面： <ul><li>BASH命令区分大小写，而DOS命令则不区分; <ul><li>在BASH下，/ character是目录分隔符，\\作为转义字符。在DOS下，/用作命令参数分隔<br> 符，\\是目录分隔符</li></ul></li><li>DOS遵循命名文件中的约定，即8个字符的文件名后跟一个点，扩展名为3个字符。BASH没<br> 有遵循这样的惯例。</li></ul></li></ul><h2 id="_8-linux-开机启动过程" tabindex="-1"><a class="header-anchor" href="#_8-linux-开机启动过程" aria-hidden="true">#</a> 8. Linux 开机启动过程？</h2><p>了解即可。<br> 1、主机加电自检，加载 BIOS 硬件信息。<br> 2、读取 MBR 的引导文件(GRUB、LILO)。<br> 3、引导 Linux 内核。<br> 4、运行第一个进程 init (进程号永远为 1 )。<br> 5、进入相应的运行级别。<br> 6、运行终端，输入用户名和密码。</p><h2 id="_9-linux系统缺省的运行级别" tabindex="-1"><a class="header-anchor" href="#_9-linux系统缺省的运行级别" aria-hidden="true">#</a> 9. Linux系统缺省的运行级别？</h2><ul><li>关机。</li><li>单机用户模式。</li><li>字符界面的多用户模式(不支持网络)。</li><li>字符界面的多用户模式。</li><li>未分配使用。</li><li>图形界面的多用户模式。</li><li>重启。</li></ul><h2 id="_10-linux-使用的进程间通信方式" tabindex="-1"><a class="header-anchor" href="#_10-linux-使用的进程间通信方式" aria-hidden="true">#</a> 10. Linux 使用的进程间通信方式？</h2><p>了解即可，不需要太深入。<br> 1、管道(pipe)、流管道(s_pipe)、有名管道(FIFO)。<br> 2、信号(signal) 。<br> 3、消息队列。<br> 4、共享内存。<br> 5、信号量。<br> 6、套接字(socket) 。</p><h2 id="_11-linux-有哪些系统日志文件" tabindex="-1"><a class="header-anchor" href="#_11-linux-有哪些系统日志文件" aria-hidden="true">#</a> 11. Linux 有哪些系统日志文件？</h2><ul><li>比较重要的是 /var/log/messages 日志文件。<br> 该日志文件是许多进程日志文件的汇总，从该文件可以看出任何入侵企图或成功的入侵。<br> 另外，如果胖友的系统里有 ELK 日志集中收集，它也会被收集进去。</li></ul><h2 id="_12-linux系统安装多个桌面环境有帮助吗" tabindex="-1"><a class="header-anchor" href="#_12-linux系统安装多个桌面环境有帮助吗" aria-hidden="true">#</a> 12. Linux系统安装多个桌面环境有帮助吗？</h2><ul><li>通常，一个桌面环境，如KDE或Gnome，足以在没有问题的情况下运行。尽管系统允许从一个环<br> 境切换到另一个环境，但这对用户来说都是优先考虑的问题。有些程序在一个环境中工作而在另一<br> 个环境中无法工作，因此它也可以被视为选择使用哪个环境的一个因素。</li></ul><h2 id="_13-什么是交换空间" tabindex="-1"><a class="header-anchor" href="#_13-什么是交换空间" aria-hidden="true">#</a> 13. 什么是交换空间？</h2><ul><li>交换空间是Linux使用的一定空间，用于临时保存一些并发运行的程序。当RAM没有足够的内存来<br> 容纳正在执行的所有程序时，就会发生这种情况。</li></ul><h2 id="_14-什么是root帐户" tabindex="-1"><a class="header-anchor" href="#_14-什么是root帐户" aria-hidden="true">#</a> 14. 什么是root帐户</h2><ul><li>root帐户就像一个系统管理员帐户，允许你完全控制系统。你可以在此处创建和维护用户帐户，为<br> 每个帐户分配不同的权限。每次安装Linux时都是默认帐户。</li></ul><h2 id="_15-什么是lilo" tabindex="-1"><a class="header-anchor" href="#_15-什么是lilo" aria-hidden="true">#</a> 15. 什么是LILO？</h2><ul><li>LILO是Linux的引导加载程序。它主要用于将Linux操作系统加载到主内存中，以便它可以开始运行。</li></ul><h2 id="_16-什么是bash" tabindex="-1"><a class="header-anchor" href="#_16-什么是bash" aria-hidden="true">#</a> 16. 什么是BASH？</h2><ul><li>BASH是Bourne Again SHell的缩写。它由Steve Bourne编写，作为原始Bourne Shell（由/ bin /<br> sh表示）的替代品。它结合了原始版本的Bourne Shell的所有功能，以及其他功能，使其更容易<br> 使用。从那以后，它已被改编为运行Linux的大多数系统的默认shell。</li></ul><h2 id="_17-什么是cli" tabindex="-1"><a class="header-anchor" href="#_17-什么是cli" aria-hidden="true">#</a> 17. 什么是CLI？</h2><ul><li>命令行界面（英语：command-line interface，缩写]：CLI）是在图形用户界面得到普及之前使<br> 用最为广泛的用户界面，它通常不支持鼠标，用户通过键盘输入指令，计算机接收到指令后，予以<br> 执行。也有人称之为字符用户界面（CUI）。</li><li>通常认为，命令行界面（CLI）没有图形用户界面（GUI）那么方便用户操作。因为，命令行界面<br> 的软件通常需要用户记忆操作的命令，但是，由于其本身的特点，命令行界面要较图形用户界面节<br> 约计算机系统的资源。在熟记命令的前提下，使用命令行界面往往要较使用图形用户界面的操作速<br> 度要快。所以，图形用户界面的操作系统中，都保留着可选的命令行界面。</li></ul><h2 id="_18-什么是gui" tabindex="-1"><a class="header-anchor" href="#_18-什么是gui" aria-hidden="true">#</a> 18. 什么是GUI？</h2><ul><li>图形用户界面（Graphical User Interface，简称 GUI，又称图形用户接口）是指采用图形方式显<br> 示的计算机操作用户界面。</li><li>图形用户界面是一种人与计算机通信的界面显示格式，允许用户使用鼠标等输入设备操纵屏幕上的<br> 图标或菜单选项，以选择命令、调用文件、启动程序或执行其它一些日常任务。与通过键盘输入文<br> 本或字符命令来完成例行任务的字符界面相比，图形用户界面有许多优点。</li></ul><h2 id="_19-开源的优势是什么" tabindex="-1"><a class="header-anchor" href="#_19-开源的优势是什么" aria-hidden="true">#</a> 19. 开源的优势是什么？</h2><ul><li>开源允许你将软件（包括源代码）免费分发给任何感兴趣的人。然后，人们可以添加功能，甚至可<br> 以调试和更正源代码中的错误。它们甚至可以让它运行得更好，然后再次自由地重新分配这些增强<br> 的源代码。这最终使社区中的每个人受益。</li></ul><h2 id="_20-gnu项目的重要性是什么" tabindex="-1"><a class="header-anchor" href="#_20-gnu项目的重要性是什么" aria-hidden="true">#</a> 20. GNU项目的重要性是什么？</h2><ul><li>这种所谓的自由软件运动具有多种优势，例如可以自由地运行程序以及根据你的需要自由学习和修<br> 改程序。它还允许你将软件副本重新分发给其他人，以及自由改进软件并将其发布给公众。</li></ul><hr><h2 id="二、磁盘、目录、文件" tabindex="-1"><a class="header-anchor" href="#二、磁盘、目录、文件" aria-hidden="true">#</a> 二、磁盘、目录、文件</h2><h2 id="_21-简单-linux-文件系统" tabindex="-1"><a class="header-anchor" href="#_21-简单-linux-文件系统" aria-hidden="true">#</a> 21. 简单 Linux 文件系统？</h2><p><strong>在 Linux 操作系统中，所有被操作系统管理的资源，例如网络接口卡、磁盘驱动器、打印机、输入输出<br> 设备、普通文件或是目录都被看作是一个文件。</strong></p><ul><li>也就是说在 Linux 系统中有一个重要的概念：一切都是文件。其实这是 Unix 哲学的一个体现，而<br> Linux 是重写 Unix 而来，所以这个概念也就传承了下来。在 Unix 系统中，把一切资源都看作是<br> 文件，包括硬件设备。UNIX系统把每个硬件都看成是一个文件，通常称为设备文件，这样用户就<br> 可以用读写文件的方式实现对硬件的访问。</li><li>Linux 支持 5 种文件类型，如下图所示：<br><img src="https://img-blog.csdnimg.cn/f88a50bd86794de1adaccc3996649877.png" alt="在这里插入图片描述" loading="lazy"></li></ul><h2 id="_22-linux-的目录结构是怎样的" tabindex="-1"><a class="header-anchor" href="#_22-linux-的目录结构是怎样的" aria-hidden="true">#</a> 22. Linux 的目录结构是怎样的？</h2><p>这个问题，一般不会问。更多是实际使用时，需要知道。</p><ul><li>Linux 文件系统的结构层次鲜明，就像一棵倒立的树，最顶层是其根目录：<br><img src="https://img-blog.csdnimg.cn/a9127b06bfec49258f5f45361bf18aca.png" alt="在这里插入图片描述" loading="lazy"></li></ul><p><strong>常见目录说明</strong>：</p><table><thead><tr><th>目录</th><th>介绍</th></tr></thead><tbody><tr><td>/bin</td><td>存放二进制可执行文件(ls,cat,mkdir等)，常用命令一般都在这里；</td></tr><tr><td>/etc</td><td>存放系统管理和配置文件；</td></tr><tr><td>/home</td><td>存放所有用户文件的根目录，是用户主目录的基点，比如用户user的主目录就是/home/user，可以用~user表示；</td></tr><tr><td>/usr</td><td>用于存放系统应用程序；</td></tr><tr><td>/opt</td><td>额外安装的可选应用程序包所放置的位置。一般情况下，我们可以把tomcat等都安装到这里；</td></tr><tr><td>/proc</td><td>虚拟文件系统目录，是系统内存的映射。可直接访问这个目录来获取系统信息；</td></tr><tr><td>/root</td><td>超级用户（系统管理员）的主目录（特权阶级）；</td></tr><tr><td>/sbin</td><td>存放二进制可执行文件，只有root才能访问。这里存放的是系统管理员使用的系统级别的管理命令和程序。如ifconfig等；</td></tr><tr><td>/dev</td><td>用于存放设备文件；</td></tr><tr><td>/mnt</td><td>系统管理员安装临时文件系统的安装点，系统提供这个目录是让用户临时挂载其他的文件系统；</td></tr><tr><td>/boot</td><td>存放用于系统引导时使用的各种文件；</td></tr><tr><td>/lib</td><td>存放着和系统运行相关的库文件 ；</td></tr><tr><td>/tmp</td><td>用于存放各种临时文件，是公用的临时文件存储点；</td></tr><tr><td>/var</td><td>用于存放运行时需要改变数据的文件，也是某些大文件的溢出区，比方说各种服务的日志文件（系统启动日志等。）等；</td></tr><tr><td>/lost+found</td><td>这个目录平时是空的，系统非正常关机而留下“无家可归”的文件（windows下叫什么.chk）就在这里</td></tr></tbody></table><h2 id="_23-什么是-inode" tabindex="-1"><a class="header-anchor" href="#_23-什么是-inode" aria-hidden="true">#</a> 23. 什么是 inode ？</h2><p>一般来说，面试不会问 inode 。但是 inode 是一个重要概念，是理解 Unix/Linux 文件系统和硬<br> 盘储存的基础。</p><ul><li>理解inode，要从文件储存说起。</li><li>文件储存在硬盘上，硬盘的最小存储单位叫做&quot;扇区&quot;（Sector）。每个扇区储存512字节（相当于0.5KB）。</li><li>操作系统读取硬盘的时候，不会一个个扇区地读取，这样效率太低，而是一次性连续读取多个扇<br> 区，即一次性读取一个&quot;块&quot;（block）。这种由多个扇区组成的&quot;块&quot;，是文件存取的最小单<br> 位。&quot;块&quot;的大小，最常见的是4KB，即连续八个 sector组成一个 block。</li><li>文件数据都储存在&quot;块&quot;中，那么很显然，我们还必须找到一个地方储存文件的元信息，比如文件的<br> 创建者、文件的创建日期、文件的大小等等。这种储存文件元信息的区域就叫做inode，中文译名<br> 为&quot;索引节点&quot;。</li><li>每一个文件都有对应的inode，里面包含了与该文件有关的一些信息。</li></ul><p><strong>简述 Linux 文件系统通过 i 节点把文件的逻辑结构和物理结构转换的工作过程？</strong><br> 如果看的一脸懵逼，也没关系。一般来说，面试官不太会问这个题目。</p><ul><li>Linux 通过 inode 节点表将文件的逻辑结构和物理结构进行转换。 <ul><li>inode 节点是一个 64 字节长的表，表中包含了文件的相关信息，其中有文件的大小、文件所<br> 有者、文件的存取许可方式以及文件的类型等重要信息。在 inode 节点表中最重要的内容是<br> 磁盘地址表。在磁盘地址表中有 13 个块号，文件将以块号在磁盘地址表中出现的顺序依次读<br> 取相应的块。</li></ul></li><li>Linux 文件系统通过把 inode 节点和文件名进行连接，当需要读取该文件时，文件系统在当<br> 前目录表中查找该文件名对应的项，由此得到该文件相对应的 inode 节点号，通过该 inode<br> 节点的磁盘地址表把分散存放的文件物理块连接成文件的逻辑结构。</li></ul><h2 id="_24-什么是硬链接和软链接" tabindex="-1"><a class="header-anchor" href="#_24-什么是硬链接和软链接" aria-hidden="true">#</a> 24. 什么是硬链接和软链接？</h2><ul><li><strong>硬链接</strong>：由于 Linux 下的文件是通过索引节点(inode)来识别文件，硬链接可以认为是一个指针，<br> 指向文件索引节点的指针，系统并不为它重新分配 inode 。每添加一个一个硬链接，文件的链接<br> 数就加 1 。 <ul><li>不足：<br> 1.不可以在不同文件系统的文件间建立链接；<br> 2.只有超级用户才可以为目录创建硬链接。</li></ul></li><li><strong>软链接</strong>：软链接克服了硬链接的不足，没有任何文件系统的限制，任何用户可以创建指向目录的符<br> 号链接。因而现在更为广泛使用，它具有更大的灵活性，甚至可以跨越不同机器、不同网络对文件<br> 进行链接。 <ul><li>不足：因为链接文件包含有原文件的路径信息，所以当原文件从一个目录下移到其他目录<br> 中，再访问链接文件，系统就找不到了，而硬链接就没有这个缺陷，你想怎么移就怎么移；<br> 还有它要系统分配额外的空间用于建立新的索引节点和保存原文件的路径。</li></ul></li><li><strong>实际场景下，基本是使用软链接。总结区别如下</strong>： <ul><li>硬链接不可以跨分区，软件链可以跨分区。</li><li>硬链接指向一个 inode 节点，而软链接则是创建一个新的 inode 节点。</li><li>删除硬链接文件，不会删除原文件，删除软链接文件，会把原文件删除。</li></ul></li></ul><h2 id="_25-raid-是什么" tabindex="-1"><a class="header-anchor" href="#_25-raid-是什么" aria-hidden="true">#</a> 25. RAID 是什么?</h2><p>RAID 全称为独立磁盘冗余阵列(Redundant Array of Independent Disks)，基本思想就是把多个<br> 相对便宜的硬盘组合起来，成为一个硬盘阵列组，使性能达到甚至超过一个价格昂贵、 容量巨大<br> 的硬盘。RAID 通常被用在服务器电脑上，使用完全相同的硬盘组成一个逻辑扇区，因此操作系统<br> 只会把它当做一个硬盘。<br> RAID 分为不同的等级，各个不同的等级均在数据可靠性及读写性能上做了不同的权衡。在实际应<br> 用中，可以依据自己的实际需求选择不同的 RAID 方案。</p><ul><li>当然，因为很多公司都使用云服务，大家很难接触到 RAID 这个概念，更多的可能是普通云盘、<br> SSD 云盘酱紫的概念。</li></ul><h2 id="三、安全" tabindex="-1"><a class="header-anchor" href="#三、安全" aria-hidden="true">#</a> 三、安全</h2><h2 id="_26-一台-linux-系统初始化环境后需要做一些什么安全工作" tabindex="-1"><a class="header-anchor" href="#_26-一台-linux-系统初始化环境后需要做一些什么安全工作" aria-hidden="true">#</a> 26. 一台 Linux 系统初始化环境后需要做一些什么安全工作？</h2><p>1、添加普通用户登陆，禁止 root 用户登陆，更改 SSH 端口号。<br> 修改 SSH 端口不一定绝对哈。当然，如果要暴露在外网，建议改下。l<br> 2、服务器使用密钥登陆，禁止密码登陆。<br> 3、开启防火墙，关闭 SElinux ，根据业务需求设置相应的防火墙规则。<br> 4、装 fail2ban 这种防止 SSH 暴力破击的软件。<br> 5、设置只允许公司办公网出口 IP 能登陆服务器(看公司实际需要)<br> 也可以安装 VPN 等软件，只允许连接 VPN 到服务器上。<br> 6、修改历史命令记录的条数为 10 条。<br> 7、只允许有需要的服务器可以访问外网，其它全部禁止。<br> 8、做好软件层面的防护。<br> 8.1 设置 nginx_waf 模块防止 SQL 注入。<br> 8.2 把 Web 服务使用 www 用户启动，更改网站目录的所有者和所属组为 www 。</p><h2 id="_27-什么叫-cc-攻击-什么叫-ddos-攻击" tabindex="-1"><a class="header-anchor" href="#_27-什么叫-cc-攻击-什么叫-ddos-攻击" aria-hidden="true">#</a> 27. 什么叫 CC 攻击？什么叫 DDOS 攻击？</h2><ul><li>CC 攻击，主要是用来攻击页面的，模拟多个用户不停的对你的页面进行访问，从而使你的系统资<br> 源消耗殆尽。</li><li>DDOS 攻击，中文名叫分布式拒绝服务攻击，指借助服务器技术将多个计算机联合起来作为攻击<br> 平台，来对一个或多个目标发动 DDOS 攻击。<br> 攻击，即是通过大量合法的请求占用大量网络资源，以达到瘫痪网络的目的。</li></ul><p><strong>怎么预防 CC 攻击和 DDOS 攻击？</strong></p><ul><li>防 CC、DDOS 攻击，这些只能是用硬件防火墙做流量清洗，将攻击流量引入黑洞。<br> 流量清洗这一块，主要是买 ISP 服务商的防攻击的服务就可以，机房一般有空余流量，我们一般<br> 是买服务，毕竟攻击不会是持续长时间。</li></ul><h2 id="_28-什么是网站数据库注入" tabindex="-1"><a class="header-anchor" href="#_28-什么是网站数据库注入" aria-hidden="true">#</a> 28. 什么是网站数据库注入？</h2><ul><li>由于程序员的水平及经验参差不齐，大部分程序员在编写代码的时候，没有对用户输入数据的合法<br> 性进行判断。</li><li>应用程序存在安全隐患。用户可以提交一段数据库查询代码，根据程序返回的结果，获得某些他想<br> 得知的数据，这就是所谓的 SQL 注入。</li><li>SQL注入，是从正常的 WWW 端口访问，而且表面看起来跟一般的 Web 页面访问没什么区别，如<br> 果管理员没查看日志的习惯，可能被入侵很长时间都不会发觉。</li></ul><p><strong>如何过滤与预防？</strong></p><ul><li>数据库网页端注入这种，可以考虑使用 nginx_waf 做过滤与预防。</li></ul><h2 id="_29-shell-脚本是什么" tabindex="-1"><a class="header-anchor" href="#_29-shell-脚本是什么" aria-hidden="true">#</a> 29. Shell 脚本是什么？</h2><ul><li>一个 Shell 脚本是一个文本文件，包含一个或多个命令。作为系统管理员，我们经常需要使用多个<br> 命令来完成一项任务，我们可以添加这些所有命令在一个文本文件(Shell 脚本)来完成这些日常工<br> 作任务。</li></ul><h2 id="四、实战" tabindex="-1"><a class="header-anchor" href="#四、实战" aria-hidden="true">#</a> 四、实战</h2><h2 id="_30-如何选择-linux-操作系统版本" tabindex="-1"><a class="header-anchor" href="#_30-如何选择-linux-操作系统版本" aria-hidden="true">#</a> 30.如何选择 Linux 操作系统版本?</h2><p><strong>一般来讲，桌面用户首选 Ubuntu ；服务器首选 RHEL 或 CentOS ，两者中首选 CentOS 。</strong></p><ul><li>根据具体要求： <ul><li>安全性要求较高，则选择 Debian 或者 FreeBSD 。</li><li>需要使用数据库高级服务和电子邮件网络应用的用户可以选择 SUSE 。</li><li>想要新技术新功能可以选择 Feddora ，Feddora 是 RHEL 和 CentOS 的一个测试版和预发布<br> 版本。</li><li>【重点】根据现有状况，绝大多数互联网公司选择 CentOS 。现在比较常用的是 6 系列，现<br> 在市场占有大概一半左右。另外的原因是 CentOS 更侧重服务器领域，并且无版权约束。<br> CentOS 7 系列，也慢慢使用的会比较多了。</li></ul></li></ul><h2 id="_31-如何规划一台-linux-主机-步骤是怎样" tabindex="-1"><a class="header-anchor" href="#_31-如何规划一台-linux-主机-步骤是怎样" aria-hidden="true">#</a> 31. 如何规划一台 Linux 主机，步骤是怎样？</h2><p>1、确定机器是做什么用的，比如是做 WEB 、DB、还是游戏服务器。<br> 不同的用途，机器的配置会有所不同。<br> 2、确定好之后，就要定系统需要怎么安装，默认安装哪些系统、分区怎么做。<br> 3、需要优化系统的哪些参数，需要创建哪些用户等等的。</p><h2 id="_32-请问当用户反馈网站访问慢-你会如何处理" tabindex="-1"><a class="header-anchor" href="#_32-请问当用户反馈网站访问慢-你会如何处理" aria-hidden="true">#</a> 32. 请问当用户反馈网站访问慢，你会如何处理？</h2><p><strong>有哪些方面的因素会导致网站网站访问慢？</strong><br> 1、服务器出口带宽不够用</p><ul><li>本身服务器购买的出口带宽比较小。一旦并发量大的话，就会造成分给每个用户的出口<br> 带宽就小，访问速度自然就会慢。</li><li>跨运营商网络导致带宽缩减。例如，公司网站放在电信的网络上，那么客户这边对接是<br> 长城宽带或联通，这也可能导致带宽的缩减。</li></ul><p>2、服务器负载过大，导致响应不过来<br> 可以从两个方面入手分析：</p><ul><li>分析系统负载，使用 w 命令或者 uptime 命令查看系统负载。如果负载很高，则使用<br> top 命令查看 CPU ，MEM 等占用情况，要么是 CPU 繁忙，要么是内存不够。</li><li>如果这二者都正常，再去使用 sar 命令分析网卡流量，分析是不是遭到了攻击。一旦分<br> 析出问题的原因，采取对应的措施解决，如决定要不要杀死一些进程，或者禁止一些访<br> 问等。</li></ul><p>3、数据库瓶颈</p><ul><li>如果慢查询比较多。那么就要开发人员或 DBA 协助进行 SQL 语句的优化。</li><li>如果数据库响应慢，考虑可以加一个数据库缓存，如 Redis 等。然后，也可以搭建<br> MySQL 主从，一台 MySQL 服务器负责写，其他几台从数据库负责读。</li></ul><p>4、网站开发代码没有优化好<br> 例如 SQL 语句没有优化，导致数据库读写相当耗时。</p><p><strong>针对网站访问慢，怎么去排查？</strong><br> 1、首先要确定是用户端还是服务端的问题。当接到用户反馈访问慢，那边自己立即访问网站看<br> 看，如果自己这边访问快，基本断定是用户端问题，就需要耐心跟客户解释，协助客户解决问题。<br> 不要上来就看服务端的问题。一定要从源头开始，逐步逐步往下。<br> 2、如果访问也慢，那么可以利用浏览器的调试功能，看看加载那一项数据消耗时间过多，是图片<br> 加载慢，还是某些数据加载慢。<br> 3、针对服务器负载情况。查看服务器硬件(网络、CPU、内存)的消耗情况。如果是购买的云主<br> 机，比如阿里云，可以登录阿里云平台提供各方面的监控，比如 CPU、内存、带宽的使用情况。<br> 4、如果发现硬件资源消耗都不高，那么就需要通过查日志，比如看看 MySQL慢查询的日志，看<br> 看是不是某条 SQL 语句查询慢，导致网站访问慢。</p><p><strong>怎么去解决？</strong><br> 1、如果是出口带宽问题，那么久申请加大出口带宽。<br> 2、如果慢查询比较多，那么就要开发人员或 DBA 协助进行 SQL 语句的优化。<br> 3、如果数据库响应慢，考虑可以加一个数据库缓存，如 Redis 等等。然后也可以搭建MySQL 主<br> 从，一台 MySQL 服务器负责写，其他几台从数据库负责读。<br> 4、申请购买 CDN 服务，加载用户的访问。<br> 5、如果访问还比较慢，那就需要从整体架构上进行优化咯。做到专角色专用，多台服务器提供同<br> 一个服务。</p><h2 id="_33-linux-性能调优都有哪几种方法" tabindex="-1"><a class="header-anchor" href="#_33-linux-性能调优都有哪几种方法" aria-hidden="true">#</a> 33. Linux 性能调优都有哪几种方法？</h2><p>1、Disabling daemons (关闭 daemons)。<br> 2、Shutting down the GUI (关闭 GUI)。<br> 3、Changing kernel parameters (改变内核参数)。<br> 4、Kernel parameters (内核参数)。<br> 5、Tuning the processor subsystem (处理器子系统调优)。<br> 6、Tuning the memory subsystem (内存子系统调优)。<br> 7、Tuning the file system (文件系统子系统调优)。<br> 8、Tuning the network subsystem（网络子系统调优)。</p><h2 id="_34-基本命令" tabindex="-1"><a class="header-anchor" href="#_34-基本命令" aria-hidden="true">#</a> 34. 基本命令</h2><p>cd （change directory：英文释义是改变目录）切换目录</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> <span class="token punctuation">..</span>/ <span class="token punctuation">;</span>跳到上级目录
<span class="token builtin class-name">cd</span> /opt <span class="token punctuation">;</span>不管现在到那直接跳到指定的opt文件夹中
<span class="token builtin class-name">cd</span> ~ <span class="token punctuation">;</span>切换当前用户的家目录。root用户的家目录就是root目录。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>pwd （print working directory：显示当前工作目录的绝对路径）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">pwd</span>
显示当前的绝对路劲
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>ls （ls：list的缩写，查看列表）查看当前目录下的所有文件夹（ls 只列出文件名或目录名）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ls</span> <span class="token parameter variable">-a</span> <span class="token punctuation">;</span>显示所有文件夹,隐藏文件也显示出来
<span class="token function">ls</span> <span class="token parameter variable">-R</span> <span class="token punctuation">;</span>连同子目录一起列出来
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>ll （ll：list的缩写，查看列表详情）查看当前目录下的所有详细信息和文件夹（ll 结果是详细,有时间,<br> 是否可读写等信息）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ll <span class="token parameter variable">-a</span> <span class="token punctuation">;</span>显示所有文件,隐藏文件也显示出来
ll <span class="token parameter variable">-R</span> <span class="token punctuation">;</span>连同子目录内容一起列出来
ll <span class="token parameter variable">-h</span> <span class="token punctuation">;</span>友好展示详情信息,可以看大小
ll <span class="token parameter variable">-al</span> <span class="token punctuation">;</span>即能显示隐藏文件又能显示详细列表。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>touch （touch：创建文件）创建文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">touch</span> test.txt <span class="token punctuation">;</span>创建test.txt文件
<span class="token function">touch</span> /opt/java/test.java <span class="token punctuation">;</span>在指定目录创建test.java文件
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>mkdir （mkdir：创建目录） 创建目录</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> 文件夹名称 <span class="token punctuation">;</span>在此目录创建文件夹
<span class="token function">mkdir</span> /opt/java/jdk <span class="token punctuation">;</span>在指定目录创建文件夹
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>cat （concatenate：显示或把多个文本文件连接起来）查看文件命令（可以快捷查看当前文件的内<br> 容）（不能快速定位到最后一页）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cat</span> lj.log <span class="token punctuation">;</span>快捷查看文件命令
Ctrl + c <span class="token punctuation">;</span>暂停显示文件
Ctrl + d <span class="token punctuation">;</span>退出查看文件命令
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>more （more：更多的意思）分页查看文件命令（不能快速定位到最后一页）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>回车：向下n行，需要定义，默认为1行。
空格键：向下滚动一屏或Ctrl+F
B：返回上一层或Ctrl+B
q：退出more
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>less （lese：较少的意思）分页查看文件命令（可以快速定位到最后一页）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">less</span> <span class="token parameter variable">-m</span> 显示类似于more命令的百分比。
<span class="token function">less</span> <span class="token parameter variable">-N</span> 显示每行的行号。<span class="token punctuation">(</span>大写的N<span class="token punctuation">)</span>
两参数一起使用如：less <span class="token parameter variable">-mN</span> 文件名，如此可分页并显示行号。
空格键：前下一页或page down。
回车：向下一行。
b：后退一页 或 page up。
q：退出。
d：前进半页。
u：后退半页
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>tail（尾巴） 查看文件命令（看最后多少行）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">tail</span> <span class="token parameter variable">-10</span> <span class="token punctuation">;</span>文件名 看最后10行
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>cp（copy单词缩写，复制功能）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cp</span> /opt/java/java.log /opt/logs/ <span class="token punctuation">;</span>把java.log 复制到/opt/logs/下
<span class="token function">cp</span> /opt/java/java.log /opt/logs/aaa.log <span class="token punctuation">;</span>把java.log 复制到/opt/logs/下并且改名为aaa.log
<span class="token function">cp</span> <span class="token parameter variable">-r</span> /opt/java /opt/logs <span class="token punctuation">;</span>把文件夹及内容复制到logs文件中
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>mv（move单词缩写，移动功能，该文件名称功能）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mv</span> /opt/java/java.log /opt/mysql/ <span class="token punctuation">;</span>移动文件到mysql目录下
<span class="token function">mv</span> java.log mysql.log <span class="token punctuation">;</span>把java.log改名为mysql.log
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>rm（remove：移除的意思）删除文件，或文件夹</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>-f或--force 强制删除文件或目录。删除文件不包括文件夹的文件
-r或-R或--recursive 递归处理，将指定目录下的所有文件及子目录一并删除。
<span class="token parameter variable">-rf</span> 强制删除文件夹及内容
<span class="token function">rm</span> 文件名 <span class="token punctuation">;</span>安全删除命令 （yes删除 no取消）
<span class="token function">rm</span> <span class="token parameter variable">-rf</span> 强制删除文件夹及内容
<span class="token function">rm</span> <span class="token parameter variable">-rf</span> * 删除当前目录下的所有内容。
<span class="token function">rm</span> <span class="token parameter variable">-rf</span> /* 删除Linux系统根目录下所有的内容。系统将完蛋。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>find （find：找到的意思）查找指定文件或目录</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>* 表示0~多个任意字符。
<span class="token function">find</span> <span class="token parameter variable">-name</span> 文件名<span class="token punctuation">;</span>按照指定名称查找在当前目录下查找文件
<span class="token function">find</span> / <span class="token parameter variable">-name</span> 文件名按照指定名称全局查找文件
<span class="token function">find</span> <span class="token parameter variable">-name</span> <span class="token string">&#39;*文件名&#39;</span> <span class="token punctuation">;</span>任意前缀加上文件名在当前目录下查找文件
<span class="token function">find</span> / <span class="token parameter variable">-name</span> <span class="token string">&#39;*文件名*&#39;</span> <span class="token punctuation">;</span>全局进行模糊查询带文件名的文件
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>vi （VIsual：视觉）文本编辑器 类似win的记事本 （操作类似于地下的vim命令，看底下vim 的操作）<br> vim （VI IMproved：改进版视觉）改进版文本编辑器 （不管是文件查看还是文件编辑 按 Shift + 上或<br> 者下可以上下移动查看视角）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>输入”vim 文件名” 打开文件，刚刚时是”一般模式”。
一般模式：可以浏览文件内容，可以进行文本快捷操作。如单行复制，多行复制，单行删除，多行删除，（退
出）等。
插入模式：可以编辑文件内容。
底行模式：可以进行强制退出操作,不保存 :q<span class="token operator">!</span>
可以进行保存并退出操作 :wq
按下”i”或”a”或”o”键，从”一般模式”，进入”插入模式（编辑模式）”。
在编辑模式下按”Esc” 即可到一般模式
在一般模式下按”:”，冒号进入底行模式。
在一般模式下的快捷键
<span class="token function">dd</span> <span class="token punctuation">;</span>删除一整行
X <span class="token punctuation">;</span>向前删除 等同于windowns系统中的删除键
x <span class="token punctuation">;</span>向后删除和大写x相反方向
Ctrl + f <span class="token punctuation">;</span>向后看一页
Ctrl + b <span class="token punctuation">;</span>向前看一页
u <span class="token punctuation">;</span>撤销上一步操作
/word <span class="token punctuation">;</span>向下查找word关键字 输入:n查找下一个,N查找上一个（不管是哪个查找都是全局查找 只不过
n的方向相反）
?log <span class="token punctuation">;</span>向上查找log关键字 输入:n查找上一个,N查找下一个
:1,90s/redis/Redis/g <span class="token punctuation">;</span>把1-90行的redis替换为Redis。语法n1,n2s/原关键字/新关键字/g，n1
代表其实行,n2代表结尾行,g是必须要的
:0 <span class="token punctuation">;</span>光标移动到第一行
:$ <span class="token punctuation">;</span>光标移动到最后一行
:300 <span class="token punctuation">;</span>光标移动到300行,输入多少数字移动到多少行
:w <span class="token punctuation">;</span>保存
:w<span class="token operator">!</span> <span class="token punctuation">;</span>强制保存
:q <span class="token punctuation">;</span>退出
:q<span class="token operator">!</span> <span class="token punctuation">;</span>强制退出
5dd <span class="token punctuation">;</span>删除后面5行,打一个参数为自己填写
5x <span class="token punctuation">;</span>删除此光标后面5个字符
d1G <span class="token punctuation">;</span>删除此光标之前的所有
d0 <span class="token punctuation">;</span>从光标当前位置删除到此行的第一个位置
yy <span class="token punctuation">;</span>复制
p <span class="token punctuation">;</span>在光标的下面进行粘贴
P <span class="token punctuation">;</span>在光标的上门进行粘贴
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>| 管道命令（把多个命令组合起来使用）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>管道命令的语法：命令1 <span class="token operator">|</span> 命令2 <span class="token operator">|</span> 命令3。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>grep （grep ：正则表达式）正则表达式，用于字符串的搜索工作(模糊查询)。不懂可以先过</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>单独使用：
<span class="token function">grep</span> String test.java ；在test.java文件中查找String的位置，返回整行
一般此命令不会单独使用下面列几个常用的命令（地下通过管道命令组合起来使用）
<span class="token function">ps</span> aux<span class="token operator">|</span><span class="token function">grep</span> <span class="token function">java</span> ；查找带java关键字的进程
ll <span class="token operator">|</span><span class="token function">grep</span> <span class="token function">java</span> ；查找带java关键字的文件夹及文件
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>yum install -y lrzsz 命令（实现win到Linux文件互相简单上传文件）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#（实际上就是在Linux系统中下载了一个插件）下了了此安装包后就可以实现win系统到linux之间拉文件拉文件</span>
<span class="token comment">#等待下载完了就可以输入：</span>
rz 从win系统中选择文件上传到Linux系统中
sz 文件名 选择Linux系统的文件复制到win系统中
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>tar （解压 压缩 命令）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>常用的组合命令：
<span class="token parameter variable">-z</span> 是否需要用gzip压缩。
<span class="token parameter variable">-c</span> 建立一个压缩文件的参数指令<span class="token punctuation">(</span>create<span class="token punctuation">)</span> –压缩
<span class="token parameter variable">-x</span> 解开一个压缩文件的参数指令<span class="token punctuation">(</span>extract<span class="token punctuation">)</span> –解压
<span class="token parameter variable">-v</span> 压缩的过程中显示文件<span class="token punctuation">(</span>verbose<span class="token punctuation">)</span>
<span class="token parameter variable">-f</span> 使用档名，在f之后要立即接档中<span class="token punctuation">(</span>file<span class="token punctuation">)</span>
常用解压参数组合：zxvf
常用压缩参数组合：zcvf
解压命令：
<span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> redis-3.2.8.tar.gz ；解压到当前文件夹
<span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> redis-3.2.8.tar.gz <span class="token parameter variable">-C</span> /opt/java/ ；解压到指定目录
压缩命令：（注意 语法有点反了，我反正每次都搞反）
<span class="token function">tar</span> <span class="token parameter variable">-zcvf</span> redis-3.2.8.tar.gz redis-3.2.8/ <span class="token punctuation">;</span>语法 <span class="token function">tar</span> <span class="token parameter variable">-zcvf</span> 压缩后的名称 要压缩的
文件
<span class="token function">tar</span> <span class="token parameter variable">-zcvf</span> 压缩后的文件（可指定目录） 要压缩的文件（可指定目录）
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ps （process status：进程状态，类似于windows的任务管理器）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>常用组合：ps <span class="token parameter variable">-ef</span> 标准的格式查看系统进程
<span class="token function">ps</span> <span class="token parameter variable">-aux</span> BSD格式查看系统进程
<span class="token function">ps</span> -aux<span class="token operator">|</span><span class="token function">grep</span> redis BSD格式查看进程名称带有redis的系统进程（常用技巧）
//显示进程的一些属性,需要了解（ps aux）
<span class="token environment constant">USER</span> //用户名
PID //进程ID号,用来杀死进程的
%CPU //进程占用的CPU的百分比
%MEM //占用内存的的百分比
VSZ //该进程使用的虚拟內存量（KB）
RSS //该进程占用的固定內存量（KB）
STAT //进程的状态
START //该进程被触发启动时间
TIME //该进程实际使用CPU运行的时间
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>clear 清屏命令。（强迫症患者使用）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">kill</span> 命令用来中止一个进程。（要配合ps命令使用，配合pid关闭进程）
（ps类似于打开任务管理器，kill类似于关闭进程）
<span class="token function">kill</span> <span class="token parameter variable">-5</span> 进程的PID <span class="token punctuation">;</span>推荐,和平关闭进程
<span class="token function">kill</span> <span class="token parameter variable">-9</span> PID <span class="token punctuation">;</span>不推荐,强制杀死进程
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ifconfig命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>用于查看和更改网络接口的地址和参数，包括IP地址、网络掩码、广播地址，使用权限是超级用户。（一般是
用来查看的，很少更改）
如果此命令输入无效，先输入yum <span class="token parameter variable">-y</span> <span class="token function">install</span> net-tools
<span class="token function">ifconfig</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ping （用于检测与目标的连通性）语法：ping ip地址</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>测试：
<span class="token number">1</span>、在Windows操作系统中cmdipconfig，查看本机IP地址：
<span class="token number">2</span>、再到LInux系统中输入 <span class="token function">ping</span> ip地址
（公司电脑，我就不暴露Ip了,没图片 自己去试）
按Ctrl + C 可以停止测
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>free 命令 （显示系统内存）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#显示系统内存使用情况，包括物理内存、交互区内存(swap)和内核缓冲区内存。</span>
<span class="token parameter variable">-b</span> 以Byte显示内存使用情况
<span class="token parameter variable">-k</span> 以kb为单位显示内存使用情况
<span class="token parameter variable">-m</span> 以mb为单位显示内存使用情况
<span class="token parameter variable">-g</span> 以gb为单位显示内存使用情况
-s<span class="token operator">&lt;</span>间隔秒数<span class="token operator">&gt;</span> 持续显示内存
<span class="token parameter variable">-t</span> 显示内存使用总
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>top 命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>
<span class="token comment">#显示当前系统正在执行的进程的相关信息，包括进程 ID、内存占用率、CPU 占用率等</span>
<span class="token parameter variable">-c</span> 显示完整的进程命令
<span class="token parameter variable">-s</span> 保密模式
<span class="token parameter variable">-p</span> <span class="token operator">&lt;</span>进程号<span class="token operator">&gt;</span> 指定进程显示
<span class="token parameter variable">-n</span> <span class="token operator">&lt;</span>次数<span class="token operator">&gt;</span>循环显示
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>netstat 命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#Linux netstat命令用于显示网络状态。</span>
<span class="token comment">#利用netstat指令可让你得知整个Linux系统的网络情况。</span>
<span class="token comment">#语法：</span>
<span class="token function">netstat</span> <span class="token punctuation">[</span>-acCeFghilMnNoprstuvVwx<span class="token punctuation">]</span><span class="token punctuation">[</span>-A<span class="token operator">&lt;</span>网络类型<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>--ip<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>file （可查看文件类型）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">file</span> 文件名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>重启linux</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Linux centos 重启命令：reboot
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>关机linux</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Linux centos 关机命令：halt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>同步时间命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ntpdate ntp1.aliyun.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>更改为北京时间命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">rm</span> <span class="token parameter variable">-rf</span> /etc/localtime
<span class="token function">ln</span> <span class="token parameter variable">-s</span> /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>查看时间命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">date</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><p><strong>史上最全Java面试宝典，BAT大厂面试必备。整理不易，建议先关注点赞加收藏</strong></p>`,165),u=n("thead",null,[n("tr",null,[n("th",null,"序号"),n("th",null,"名称"),n("th",null,"地址")])],-1),p=n("td",null,"1",-1),b=n("td",null,"Java基础面试题（91道含答案）",-1),h={href:"https://blog.csdn.net/qq_30999361/article/details/124482581",target:"_blank",rel:"noopener noreferrer"},v=n("td",null,"2",-1),m=n("td",null,"Java并发编程面试题 （123道含答案）",-1),_={href:"https://blog.csdn.net/qq_30999361/article/details/124545403",target:"_blank",rel:"noopener noreferrer"},g=n("td",null,"3",-1),x=n("td",null,"Java异常面试题 （33道含答案）",-1),k={href:"https://blog.csdn.net/qq_30999361/article/details/124560006",target:"_blank",rel:"noopener noreferrer"},f=n("td",null,"4",-1),L=n("td",null,"Java虚拟机（JVM）面试题（51道含答案）",-1),S={href:"https://blog.csdn.net/qq_30999361/article/details/124532763",target:"_blank",rel:"noopener noreferrer"},q=n("td",null,"5",-1),C=n("td",null,"Java集合面试题（52道含答案）",-1),U={href:"https://blog.csdn.net/qq_30999361/article/details/124503952",target:"_blank",rel:"noopener noreferrer"},I=n("td",null,"6",-1),D=n("td",null,"Linux面试题（50道含答案）",-1),w={href:"https://blog.csdn.net/qq_30999361/article/details/124575798",target:"_blank",rel:"noopener noreferrer"},y=n("td",null,"7",-1),B=n("td",null,"Memcache面试题（23道含答案）",-1),A={href:"https://blog.csdn.net/qq_30999361/article/details/124596870",target:"_blank",rel:"noopener noreferrer"},O=n("td",null,"8",-1),P=n("td",null,"Mybatiss面试题 （37道含答案）",-1),R={href:"https://blog.csdn.net/qq_30999361/article/details/124560907",target:"_blank",rel:"noopener noreferrer"},j=n("td",null,"9",-1),N=n("td",null,"MySQL面试题（40道含答案）",-1),z={href:"https://blog.csdn.net/qq_30999361/article/details/124506169",target:"_blank",rel:"noopener noreferrer"},M=n("td",null,"10",-1),E=n("td",null,"Netty面试题（49道含答案）",-1),H={href:"https://blog.csdn.net/qq_30999361/article/details/124617122",target:"_blank",rel:"noopener noreferrer"},G=n("td",null,"11",-1),Q=n("td",null,"Nginx面试题（23道含答案）",-1),W={href:"https://blog.csdn.net/qq_30999361/article/details/124597174",target:"_blank",rel:"noopener noreferrer"},T=n("td",null,"12",-1),V=n("td",null,"RabbitMQ面试题（22道含答案）",-1),K={href:"https://blog.csdn.net/qq_30999361/article/details/124533998",target:"_blank",rel:"noopener noreferrer"},F=n("td",null,"13",-1),J=n("td",null,"Redis面试题（70道含答案）",-1),X={href:"https://blog.csdn.net/qq_30999361/article/details/124459566",target:"_blank",rel:"noopener noreferrer"},Z=n("td",null,"14",-1),$=n("td",null,"SpringBoot面试题（44道含答案）",-1),Y={href:"https://blog.csdn.net/qq_30999361/article/details/124461725",target:"_blank",rel:"noopener noreferrer"},nn=n("td",null,"15",-1),an=n("td",null,"SpringCloud面试题（49道含答案）",-1),en={href:"https://blog.csdn.net/qq_30999361/article/details/124430712",target:"_blank",rel:"noopener noreferrer"},sn=n("td",null,"16",-1),ln=n("td",null,"SpringMVC面试题（29道含答案）",-1),tn={href:"https://blog.csdn.net/qq_30999361/article/details/124519135",target:"_blank",rel:"noopener noreferrer"},rn=n("td",null,"17",-1),dn=n("td",null,"Spring面试题（75道含答案）",-1),on={href:"https://blog.csdn.net/qq_30999361/article/details/124519472",target:"_blank",rel:"noopener noreferrer"},cn=n("td",null,"18",-1),un=n("td",null,"TCP、UDP、Socket、Http网络编程面试题（47道含答案）",-1),pn={href:"https://blog.csdn.net/qq_30999361/article/details/124617792",target:"_blank",rel:"noopener noreferrer"},bn=n("td",null,"19",-1),hn=n("td",null,"Tomcat面试题（15道含答案）",-1),vn={href:"https://blog.csdn.net/qq_30999361/article/details/124576964",target:"_blank",rel:"noopener noreferrer"},mn=n("td",null,"20",-1),_n=n("td",null,"Zookeeper面试题（28道含答案）",-1),gn={href:"https://blog.csdn.net/qq_30999361/article/details/124596208",target:"_blank",rel:"noopener noreferrer"},xn=n("td",null,"21",-1),kn=n("td",null,"多线程面试题（60道含答案）",-1),fn={href:"https://blog.csdn.net/qq_30999361/article/details/124596462",target:"_blank",rel:"noopener noreferrer"},Ln=n("td",null,"22",-1),Sn=n("td",null,"设计模式面试题（14道含答案）",-1),qn={href:"https://blog.csdn.net/qq_30999361/article/details/124637874",target:"_blank",rel:"noopener noreferrer"},Cn=n("td",null,"23",-1),Un=n("td",null,"BIO、NIO、AIO、Netty面试题（35道含答案）",-1),In={href:"https://blog.csdn.net/qq_30999361/article/details/124653616",target:"_blank",rel:"noopener noreferrer"},Dn=n("td",null,"24",-1),wn=n("td",null,"Dubbo面试题（47道含答案）",-1),yn={href:"https://blog.csdn.net/qq_30999361/article/details/124637288",target:"_blank",rel:"noopener noreferrer"},Bn=n("td",null,"25",-1),An=n("td",null,"ElasticSearch面试题（31道含答案）",-1),On={href:"https://blog.csdn.net/qq_30999361/article/details/124619240",target:"_blank",rel:"noopener noreferrer"},Pn=n("td",null,"26",-1),Rn=n("td",null,"Git常用命令（63条）",-1),jn={href:"https://blog.csdn.net/qq_30999361/article/details/124438420",target:"_blank",rel:"noopener noreferrer"};function Nn(zn,Mn){const a=l("ExternalLinkIcon");return t(),r("div",null,[c,n("table",null,[u,n("tbody",null,[n("tr",null,[p,b,n("td",null,[n("a",h,[e("（点击查看）"),s(a)])])]),n("tr",null,[v,m,n("td",null,[n("a",_,[e("（点击查看）"),s(a)])])]),n("tr",null,[g,x,n("td",null,[n("a",k,[e("（点击查看）"),s(a)])])]),n("tr",null,[f,L,n("td",null,[n("a",S,[e("（点击查看）"),s(a)])])]),n("tr",null,[q,C,n("td",null,[n("a",U,[e("（点击查看）"),s(a)])])]),n("tr",null,[I,D,n("td",null,[n("a",w,[e("（点击查看）"),s(a)])])]),n("tr",null,[y,B,n("td",null,[n("a",A,[e("（点击查看）"),s(a)])])]),n("tr",null,[O,P,n("td",null,[n("a",R,[e("（点击查看）"),s(a)])])]),n("tr",null,[j,N,n("td",null,[n("a",z,[e("（点击查看）"),s(a)])])]),n("tr",null,[M,E,n("td",null,[n("a",H,[e("（点击查看）"),s(a)])])]),n("tr",null,[G,Q,n("td",null,[n("a",W,[e("（点击查看）"),s(a)])])]),n("tr",null,[T,V,n("td",null,[n("a",K,[e("（点击查看）"),s(a)])])]),n("tr",null,[F,J,n("td",null,[n("a",X,[e("（点击查看）"),s(a)])])]),n("tr",null,[Z,$,n("td",null,[n("a",Y,[e("（点击查看）"),s(a)])])]),n("tr",null,[nn,an,n("td",null,[n("a",en,[e("（点击查看）"),s(a)])])]),n("tr",null,[sn,ln,n("td",null,[n("a",tn,[e("（点击查看）"),s(a)])])]),n("tr",null,[rn,dn,n("td",null,[n("a",on,[e("（点击查看）"),s(a)])])]),n("tr",null,[cn,un,n("td",null,[n("a",pn,[e("（点击查看）"),s(a)])])]),n("tr",null,[bn,hn,n("td",null,[n("a",vn,[e("（点击查看）"),s(a)])])]),n("tr",null,[mn,_n,n("td",null,[n("a",gn,[e("（点击查看）"),s(a)])])]),n("tr",null,[xn,kn,n("td",null,[n("a",fn,[e("（点击查看）"),s(a)])])]),n("tr",null,[Ln,Sn,n("td",null,[n("a",qn,[e("（点击查看）"),s(a)])])]),n("tr",null,[Cn,Un,n("td",null,[n("a",In,[e("（点击查看）"),s(a)])])]),n("tr",null,[Dn,wn,n("td",null,[n("a",yn,[e("（点击查看）"),s(a)])])]),n("tr",null,[Bn,An,n("td",null,[n("a",On,[e("（点击查看）"),s(a)])])]),n("tr",null,[Pn,Rn,n("td",null,[n("a",jn,[e("（点击查看）"),s(a)])])])])])])}const Hn=i(o,[["render",Nn],["__file","Linux面试题（50道含答案）.html.vue"]]);export{Hn as default};
