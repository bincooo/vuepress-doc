import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as i,o,c as l,a as s,d as n,b as e,e as t}from"./app--CHp3Uh7.js";const c={},r=t('<h2 id="环境" tabindex="-1"><a class="header-anchor" href="#环境"><span>环境</span></a></h2><blockquote><p>系统: Intel core Mac Ventura13.0.1</p><p>工具:</p><p>​ - Idea: 2022.2.3 gradle: 7.4 (idea自带的)</p><p>​ - openjdk: version &quot;17.0.5&quot; 2022-10-18</p><p>​ - graalvm: CE 22.3.0</p></blockquote><h2 id="步骤" tabindex="-1"><a class="header-anchor" href="#步骤"><span>步骤</span></a></h2><h3 id="_1-安装" tabindex="-1"><a class="header-anchor" href="#_1-安装"><span>1. 安装</span></a></h3>',4),u={href:"https://www.graalvm.org/downloads/",target:"_blank",rel:"noopener noreferrer"},d=t(`<p>安装过程挺简单的就不多介绍了。</p><p>安装完成后配置<code>JAVA_HOME</code>, 可参考我的配置但不一定要照抄</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>

<span class="token builtin class-name">declare</span> <span class="token function-name function">useJdk</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token builtin class-name">local</span> jdk
    <span class="token builtin class-name">local</span> <span class="token assign-left variable">machines</span><span class="token operator">=</span>/Library/Java/JavaVirtualMachines
    <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$1</span> <span class="token operator">=</span> <span class="token string">&#39;jdk11&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
        <span class="token assign-left variable">jdk</span><span class="token operator">=</span><span class="token variable">$machines</span>/jdk-11.jdk/Contents/Home
    <span class="token keyword">elif</span> <span class="token punctuation">[</span> <span class="token variable">$1</span> <span class="token operator">=</span> <span class="token string">&#39;jdk17&#39;</span>  <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
        <span class="token assign-left variable">jdk</span><span class="token operator">=</span><span class="token variable">$machines</span>/jdk-17.jdk/Contents/Home
    <span class="token keyword">elif</span> <span class="token punctuation">[</span> <span class="token variable">$1</span> <span class="token operator">=</span> <span class="token string">&#39;jdk19&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
        <span class="token assign-left variable">jdk</span><span class="token operator">=</span><span class="token variable">$machines</span>/jdk-19.jdk/Contents/Home
    <span class="token keyword">elif</span> <span class="token punctuation">[</span> <span class="token variable">$1</span> <span class="token operator">=</span> <span class="token string">&#39;gdk17&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
        <span class="token assign-left variable">jdk</span><span class="token operator">=</span><span class="token variable">$machines</span>/graalvm-ce-java17/Contents/Home
    <span class="token keyword">else</span>
        <span class="token assign-left variable">jdk</span><span class="token operator">=</span><span class="token variable">$JAVA_HOME</span>
    <span class="token keyword">fi</span>
    <span class="token builtin class-name">export</span> <span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=</span><span class="token variable">$jdk</span>
    <span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token variable">$JAVA_HOME</span>/bin:<span class="token environment constant">$PATH</span>
<span class="token punctuation">}</span>

<span class="token comment">#jdk</span>
<span class="token builtin class-name">alias</span> <span class="token assign-left variable">jdk11</span><span class="token operator">=</span><span class="token string">&quot;useJdk jdk11&quot;</span>
<span class="token builtin class-name">alias</span> <span class="token assign-left variable">jdk17</span><span class="token operator">=</span><span class="token string">&quot;useJdk jdk17&quot;</span>
<span class="token builtin class-name">alias</span> <span class="token assign-left variable">jdk19</span><span class="token operator">=</span><span class="token string">&quot;useJdk jdk19&quot;</span>
<span class="token comment">#gdk</span>
<span class="token builtin class-name">alias</span> <span class="token assign-left variable">gdk17</span><span class="token operator">=</span><span class="token string">&quot;useJdk gdk17&quot;</span>

<span class="token comment"># 若不需要指定版本把下面一行注释，Mac会识别JavaVirtualMachines目录下的jdk，并将最新版作为默认</span>
<span class="token comment"># 切换时在 控制台输入 jdk11 或 gdk17 即可</span>
<span class="token comment"># useJdk gdk17</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>自动加载：<code>vim ~/.zshrc</code> 或者 <code>vim ~/.bashrc</code> 添加如下代码</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token keyword">for</span> <span class="token for-or-select variable">file</span> <span class="token keyword">in</span> /etc/bashrc.d/*
<span class="token keyword">do</span>
  <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-f</span> <span class="token variable">$file</span> <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>
    <span class="token builtin class-name">source</span> <span class="token string">&quot;<span class="token variable">$file</span>&quot;</span>
  <span class="token keyword">fi</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>会在进入控制台时加载<code>/etc/bashrc.d/</code>下的脚本</p><p>在控制台输入指令查看是否配置成功</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">java</span> <span class="token parameter variable">-version</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如图：</p><figure><img src="https://i0.hdslb.com/bfs/album/7e60849511b78a6d260bbf7f2ecd12e010a3691f.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>graalvm 安装native-image 工具</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 控制台输入安装</span>
gu <span class="token function">install</span> native-image
<span class="token comment"># 查看是否安装成功</span>
native-image <span class="token parameter variable">--help</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后在Idea中配置项目使用的jdk，预备工作就算完成了</p><figure><img src="https://i0.hdslb.com/bfs/album/d761f8d1ab8b86adc12f91952f5b1d490245a095.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h3 id="_2-配置" tabindex="-1"><a class="header-anchor" href="#_2-配置"><span>2. 配置</span></a></h3><p>项目中使用 <code>build.gradle</code></p><p>添加插件:</p><div class="language-groovy line-numbers-mode" data-ext="groovy" data-title="groovy"><pre class="language-groovy"><code>plugins <span class="token punctuation">{</span>
    id <span class="token string">&#39;java&#39;</span>
    id <span class="token string">&#39;org.springframework.boot&#39;</span> version <span class="token string">&#39;3.0.0&#39;</span>
    id <span class="token string">&#39;io.spring.dependency-management&#39;</span> version <span class="token string">&#39;1.1.0&#39;</span>
    <span class="token comment">// 主要添加下面native插件</span>
    id <span class="token string">&#39;org.graalvm.buildtools.native&#39;</span> version <span class="token string">&#39;0.9.18&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置编译指令</p><div class="language-groovy line-numbers-mode" data-ext="groovy" data-title="groovy"><pre class="language-groovy"><code>graalvmNative <span class="token punctuation">{</span>
    binaries <span class="token punctuation">{</span>
        main <span class="token punctuation">{</span>
            <span class="token comment">// 编译时显示详细信息</span>
            buildArgs<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&#39;--verbose&#39;</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>选择右侧边栏的编译选项即可开始编译 nativeCompile</p><figure><img src="https://i0.hdslb.com/bfs/album/8f69f709680e43bed90a8cd2f898be69b8fb0b1f.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h3 id="_3-问题" tabindex="-1"><a class="header-anchor" href="#_3-问题"><span>3. 问题</span></a></h3><p>如果你的项目是一个初始项目比较干净，一般一次能编译过并能成功跑起来。</p><p>而博主当然不可能一次编译通过啦，这也是本文编写的目的，为此用了一个以前写的小项目升级springboot3.0</p><p>第一次编译结果如下：</p><figure><img src="https://i0.hdslb.com/bfs/album/ebc6717ef1ecba20903eec33c4b596456b0c4e2a.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>大致意思是这个类需要在构建过程中被初始化，Eum～～ 没弄懂？ 去到官网瞅了瞅</p><p>发现了一些字眼很类似：</p><figure><img src="https://i0.hdslb.com/bfs/album/932de74b70024d8d76a31782c62ca5117d63b4ce.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><div class="language-tex line-numbers-mode" data-ext="tex" data-title="tex"><pre class="language-tex"><code># 构建期初始化？
--initialize-at-build-time: a comma-separated list of packages and classes (and implicitly all of their superclasses) that are initialized during the image build. An empty string designates all packages.
# 运行时初始化？
--initialize-at-run-time: a comma-separated list of packages and classes (and implicitly all of their subclasses) that must be initialized at runtime and not during the image build. An empty string is currently not supported.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>加上试试</p><div class="language-groovy line-numbers-mode" data-ext="groovy" data-title="groovy"><pre class="language-groovy"><code>graalvmNative <span class="token punctuation">{</span>
    binaries <span class="token punctuation">{</span>
        main <span class="token punctuation">{</span>
            buildArgs<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&#39;--verbose&#39;</span><span class="token punctuation">)</span>
            buildArgs<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;--initialize-at-build-time=org.apache.commons.logging.LogFactory&quot;</span></span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.hdslb.com/bfs/album/e34536e4d23cd13f41bac959e144a3f906aa1b6c.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>不错，确实可行</p><p>但是还没完 ...</p><p>运行项目看看</p><figure><img src="https://i0.hdslb.com/bfs/album/c5967a197fc79aafc743d267266bae678ee98cfd.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>缓存炸了，细心的人应该留意到了CGLIB字眼。</p><p>没错了，就是动态代理的问题</p><p>官方文档也有对此的说明，我们把参数加上</p><p><code>build.gradle</code></p><div class="language-groovy line-numbers-mode" data-ext="groovy" data-title="groovy"><pre class="language-groovy"><code>graalvmNative <span class="token punctuation">{</span>
    binaries <span class="token punctuation">{</span>
        main <span class="token punctuation">{</span>
            buildArgs<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&#39;--verbose&#39;</span><span class="token punctuation">)</span>
            buildArgs<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;--initialize-at-build-time=org.apache.commons.logging.LogFactory&quot;</span></span><span class="token punctuation">)</span>
            buildArgs<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;-H:ReflectionConfigurationFiles=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">projectDir</span></span><span class="token string">/reflection-config.json&quot;</span></span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>reflection-config.json</code></p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code># 这个文件主要描述了类的一些信息来给运行期的程序识别的
<span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;com.github.benmanes.caffeine.cache.PSWMS&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;methods&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token comment">// &lt;init&gt; 固定写法，就是构造方法，普通方法就写名字就好了</span>
      <span class="token punctuation">{</span> <span class="token property">&quot;name&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;&lt;init&gt;&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;parameterTypes&quot;</span> <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;com.github.benmanes.caffeine.cache.SSSMSW&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;methods&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token property">&quot;name&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;&lt;init&gt;&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;parameterTypes&quot;</span> <span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token string">&quot;com.github.benmanes.caffeine.cache.Caffeine&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;com.github.benmanes.caffeine.cache.AsyncCacheLoader&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;boolean&quot;</span>
        <span class="token punctuation">]</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编译、运行 ...</p><figure><img src="https://i0.hdslb.com/bfs/album/39e32f5b96679fb21363d71b4daf1c1305ebe82d.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>启动正常了</p><p>哦，对了。</p><p>官方还介绍了另一种动态代理的处理方式，不过现在被标记为过时了。</p><p>就是使用类的方式标注，编译时会被识别解析</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>github<span class="token punctuation">.</span>benmanes<span class="token punctuation">.</span>caffeine<span class="token punctuation">.</span>cache</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>oracle<span class="token punctuation">.</span>svm<span class="token punctuation">.</span>core<span class="token punctuation">.</span>annotate<span class="token punctuation">.</span></span><span class="token class-name">AutomaticFeature</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>graalvm<span class="token punctuation">.</span>nativeimage<span class="token punctuation">.</span>hosted<span class="token punctuation">.</span></span><span class="token class-name">Feature</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>graalvm<span class="token punctuation">.</span>nativeimage<span class="token punctuation">.</span>hosted<span class="token punctuation">.</span></span><span class="token class-name">RuntimeReflection</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@AutomaticFeature</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ReflectionFeature</span> <span class="token keyword">implements</span> <span class="token class-name">Feature</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">beforeAnalysis</span><span class="token punctuation">(</span><span class="token class-name">BeforeAnalysisAccess</span> access<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">RuntimeReflection</span><span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token constant">SSSMSW</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">RuntimeReflection</span><span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token constant">SSSMSW</span><span class="token punctuation">.</span><span class="token keyword">class</span>
                    <span class="token punctuation">.</span><span class="token function">getDeclaredConstructor</span><span class="token punctuation">(</span><span class="token class-name">Caffeine</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">AsyncCacheLoader</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token keyword">boolean</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">RuntimeReflection</span><span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token constant">PSWMS</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">RuntimeReflection</span><span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token constant">PSWMS</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getDeclaredConstructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">NoSuchMethodException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>-----------------------</p>`,53),k={href:"https://docs.oracle.com/en/graalvm/enterprise/20/docs/reference-manual/native-image/Options/",target:"_blank",rel:"noopener noreferrer"},m={href:"https://github.com/bincooo/aria2-boot",target:"_blank",rel:"noopener noreferrer"};function v(b,g){const a=i("ExternalLinkIcon");return o(),l("div",null,[r,s("p",null,[n("graalvm 下载地址["),s("a",u,[n("点我"),e(a)]),n("]")]),d,s("p",null,[n("graalvm文档["),s("a",k,[n("点我"),e(a)]),n("] ｜ 演示的项目["),s("a",m,[n("点我"),e(a)]),n("]")])])}const y=p(c,[["render",v],["__file","graalvm-springbot3.0新特性.html.vue"]]),q=JSON.parse('{"path":"/guide/program/graalvm-springbot3.0%E6%96%B0%E7%89%B9%E6%80%A7.html","title":"对graalvm、springboot3探究","lang":"zh-CN","frontmatter":{"title":"对graalvm、springboot3探究","head":[["meta",{"name":"referrer","content":"no-referrer"}],["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/vuepress-doc/guide/program/graalvm-springbot3.0%E6%96%B0%E7%89%B9%E6%80%A7.html"}],["meta",{"property":"og:site_name","content":"折戟沉沙、丿"}],["meta",{"property":"og:title","content":"对graalvm、springboot3探究"}],["meta",{"property":"og:description","content":"环境 系统: Intel core Mac Ventura13.0.1 工具: ​ - Idea: 2022.2.3 gradle: 7.4 (idea自带的) ​ - openjdk: version \\"17.0.5\\" 2022-10-18 ​ - graalvm: CE 22.3.0 步骤 1. 安装 graalvm 下载地址[点我] 安装过程挺简..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://i0.hdslb.com/bfs/album/7e60849511b78a6d260bbf7f2ecd12e010a3691f.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-16T11:54:35.000Z"}],["meta",{"property":"article:author","content":"Mr.Hope"}],["meta",{"property":"article:modified_time","content":"2024-06-16T11:54:35.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"对graalvm、springboot3探究\\",\\"image\\":[\\"https://i0.hdslb.com/bfs/album/7e60849511b78a6d260bbf7f2ecd12e010a3691f.png\\",\\"https://i0.hdslb.com/bfs/album/d761f8d1ab8b86adc12f91952f5b1d490245a095.png\\",\\"https://i0.hdslb.com/bfs/album/8f69f709680e43bed90a8cd2f898be69b8fb0b1f.png\\",\\"https://i0.hdslb.com/bfs/album/ebc6717ef1ecba20903eec33c4b596456b0c4e2a.png\\",\\"https://i0.hdslb.com/bfs/album/932de74b70024d8d76a31782c62ca5117d63b4ce.png\\",\\"https://i0.hdslb.com/bfs/album/e34536e4d23cd13f41bac959e144a3f906aa1b6c.png\\",\\"https://i0.hdslb.com/bfs/album/c5967a197fc79aafc743d267266bae678ee98cfd.png\\",\\"https://i0.hdslb.com/bfs/album/39e32f5b96679fb21363d71b4daf1c1305ebe82d.png\\"],\\"dateModified\\":\\"2024-06-16T11:54:35.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]],"description":"环境 系统: Intel core Mac Ventura13.0.1 工具: ​ - Idea: 2022.2.3 gradle: 7.4 (idea自带的) ​ - openjdk: version \\"17.0.5\\" 2022-10-18 ​ - graalvm: CE 22.3.0 步骤 1. 安装 graalvm 下载地址[点我] 安装过程挺简..."},"headers":[{"level":2,"title":"环境","slug":"环境","link":"#环境","children":[]},{"level":2,"title":"步骤","slug":"步骤","link":"#步骤","children":[{"level":3,"title":"1. 安装","slug":"_1-安装","link":"#_1-安装","children":[]},{"level":3,"title":"2. 配置","slug":"_2-配置","link":"#_2-配置","children":[]},{"level":3,"title":"3. 问题","slug":"_3-问题","link":"#_3-问题","children":[]}]}],"git":{"createdTime":1718538875000,"updatedTime":1718538875000,"contributors":[{"name":"折戟沉沙、丿","email":"36452456+bincooo@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":3.08,"words":923},"filePathRelative":"guide/program/graalvm-springbot3.0新特性.md","localizedDate":"2024年6月16日","autoDesc":true}');export{y as comp,q as data};
