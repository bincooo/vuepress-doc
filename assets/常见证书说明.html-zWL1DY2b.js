import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,e as s,o as t}from"./app-DitLSZeN.js";const i={};function l(r,a){return t(),n("div",null,a[0]||(a[0]=[s(`<h3 id="x-509证书标准定义" tabindex="-1"><a class="header-anchor" href="#x-509证书标准定义"><span>X.509证书标准定义</span></a></h3><p>PEM、DER</p><p>--- 文件拓展名: --- CRT和CER是一种东西，只是后缀名不一样：也同样有两种格式: Base64和字节码 PEM: 纯文本文件, 以-----BEGIN 某某某-----开头, 以-----END 某某某-----结尾, 内容是 base64 编码 DER: 二进制文件格式, 一般应使用 Windows/Java 开发工具打开, 也可以使用openssl命令行工具提取其中信息或进行编码转换 CRT: 常见于*NIX系统,有可能是PEM编码,也有可能是DER编码,大多数应该是PEM编码 CER: 常见于Windows系统,同样的,可能是PEM编码,也可能是DER编码,大多数应该是DER编码 KEY: 通常用来存放一个公钥或者私钥,并非X.509证书,编码同样的,可能是PEM,也可能是DER 查看KEY的办法:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>openssl rsa <span class="token parameter variable">-in</span> mykey.key <span class="token parameter variable">-text</span> <span class="token parameter variable">-noout</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果是DER格式的话,同理应该这样了:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>openssl rsa <span class="token parameter variable">-in</span> mykey.key <span class="token parameter variable">-text</span> <span class="token parameter variable">-noout</span> <span class="token parameter variable">-inform</span> der
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>CSR: 这个并不是证书,而是向权威证书颁发机构获得签名证书的申请,其核心内容是一个公钥,在生成这个申请的时候,同时也会生成一个私钥,私钥要自己保管好 PFX/P12: ngnix服务器来说,一般CRT和KEY是分开存放在不同文件中的,但Windows的IIS则将它们存在一个PFX文件中 PFX转换为PEM编码:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>openssl pkcs12 <span class="token parameter variable">-in</span> for-iis.pfx <span class="token parameter variable">-out</span> for-iis.pem <span class="token parameter variable">-nodes</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>生成pfx的命令:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>openssl pkcs12 <span class="token parameter variable">-export</span> <span class="token parameter variable">-in</span> certificate.crt <span class="token parameter variable">-inkey</span> privateKey.key <span class="token parameter variable">-out</span> certificate.pfx <span class="token parameter variable">-certfile</span> CACert.crt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>JKS: 即Java Key Storage,这是Java的专利,跟OpenSSL关系不大,利用Java的一个叫&quot;keytool&quot;的工具,可以将PFX转为JKS.</p><p>注: keytool也能直接生成JKS.</p><h3 id="证书编码的转换" tabindex="-1"><a class="header-anchor" href="#证书编码的转换"><span>证书编码的转换</span></a></h3><p>PEM转为DER：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>openssl x509 <span class="token parameter variable">-in</span> cert.crt <span class="token parameter variable">-outform</span> der <span class="token parameter variable">-out</span> cert.der
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>DER转为PEM：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>openssl x509 <span class="token parameter variable">-in</span> cert.crt <span class="token parameter variable">-inform</span> der <span class="token parameter variable">-outform</span> pem <span class="token parameter variable">-out</span> cert.pem
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="生成csr时翻译说明" tabindex="-1"><a class="header-anchor" href="#生成csr时翻译说明"><span>生成CSR时翻译说明</span></a></h3><div class="language-tex line-numbers-mode" data-ext="tex" data-title="tex"><pre class="language-tex"><code>Country Name (2 letter code) <span class="token punctuation">[</span>AU<span class="token punctuation">]</span>:CN 															国家名称（2 个字母代码）<span class="token punctuation">[</span>AU<span class="token punctuation">]</span>:CN
State or Province Name (full name) <span class="token punctuation">[</span>Some-State<span class="token punctuation">]</span>:GuangDong					州或省名称（全名）<span class="token punctuation">[</span>Some-State<span class="token punctuation">]</span>：广东
Locality Name (eg, city) <span class="token punctuation">[</span><span class="token punctuation">]</span>:ZhongShan															地名（如城市）<span class="token punctuation">[</span><span class="token punctuation">]</span>:ZhongShan
Organization Name (eg, company) <span class="token punctuation">[</span>Internet Widgits Pty Ltd<span class="token punctuation">]</span>:xxx		组织名称（例如，公司）<span class="token punctuation">[</span>Internet Widgits Pty Ltd<span class="token punctuation">]</span>:xxx
Organizational Unit Name (eg, section) <span class="token punctuation">[</span><span class="token punctuation">]</span>:xxx											组织单位名称（例如，部分）<span class="token punctuation">[</span><span class="token punctuation">]</span>:xxx
Common Name (e.g. server FQDN or YOUR name) <span class="token punctuation">[</span><span class="token punctuation">]</span>:*.xxx.com 					通用名称（例如服务器 FQDN 或您的姓名）<span class="token punctuation">[</span><span class="token punctuation">]</span>:*.xxx.com
Email Address <span class="token punctuation">[</span><span class="token punctuation">]</span>:bingco.zn@gmail.com 															邮箱地址 <span class="token punctuation">[</span><span class="token punctuation">]</span>:bingco.zn@gmail.com

Please enter the following &#39;extra&#39; attributes
to be sent with your certificate request
A challenge password <span class="token punctuation">[</span><span class="token punctuation">]</span>:xxx.com 																	证书库密码: xxx.com 
An optional company name <span class="token punctuation">[</span><span class="token punctuation">]</span>:																			可选的公司名称 <span class="token punctuation">[</span><span class="token punctuation">]</span>:
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="自颁发证书指令" tabindex="-1"><a class="header-anchor" href="#自颁发证书指令"><span>自颁发证书指令</span></a></h3><ol><li>生成KEY 算法是des3</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>openssl genrsa <span class="token parameter variable">-des3</span> <span class="token parameter variable">-out</span> server.key <span class="token number">2048</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>生成证书签名工具CSR</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>openssl req <span class="token parameter variable">-new</span> <span class="token parameter variable">-key</span> server.key <span class="token parameter variable">-out</span> server.csr
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li><p>生成CA证书</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>openssl x509 <span class="token punctuation">\\</span>
<span class="token parameter variable">-req</span> <span class="token punctuation">\\</span>
<span class="token parameter variable">-days</span> <span class="token number">365</span> <span class="token punctuation">\\</span>
<span class="token parameter variable">-in</span> server.csr <span class="token punctuation">\\</span>
<span class="token parameter variable">-signkey</span> <span class="token punctuation">\\</span>
<span class="token parameter variable">-server.key</span> <span class="token punctuation">\\</span>
<span class="token parameter variable">-out</span> server.crt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果需要做双向认证，可重复以上步骤生成客户端证书</p></li></ol><h3 id="证书转换" tabindex="-1"><a class="header-anchor" href="#证书转换"><span>证书转换</span></a></h3><p>格式转换: PEM转DER</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>// 这里转换参可以为der或pem
openssl x509 <span class="token parameter variable">-in</span> server.crt <span class="token parameter variable">-out</span> server-bin.crt <span class="token parameter variable">-outform</span> der
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="测试可用自签名步骤" tabindex="-1"><a class="header-anchor" href="#测试可用自签名步骤"><span>测试可用自签名步骤</span></a></h3><p>创建 ca.cnf 文件</p><p>写入如下配置信息</p><div class="language-tex line-numbers-mode" data-ext="tex" data-title="tex"><pre class="language-tex"><code>distinguished_name = req_distinguished_name #特征名称信息
prompt = no #关闭指令输入特征名称信息
<span class="token punctuation">[</span>req_distinguished_name<span class="token punctuation">]</span>
C = CN
ST = GuangDong
L = ZhongShan
O = xxx
OU = xxx
CN = 192.168.0.168

<span class="token punctuation">[</span>v3_req<span class="token punctuation">]</span> # v3配置
keyUsage = critical, digitalSignature, keyAgreement
extendedKeyUsage = serverAuth
subjectAltName = @alt_names

<span class="token punctuation">[</span>alt_names<span class="token punctuation">]</span> #域名与IP配置
DNS.1 = xxx.com
DNS.2 = *.xxx.com
DNS.3 = www.xxx.com
IP.1 = 127.0.0.1
IP.2 = 192.168.0.168
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="生成指令" tabindex="-1"><a class="header-anchor" href="#生成指令"><span>生成指令</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>openssl <span class="token punctuation">\\</span>
req <span class="token parameter variable">-x509</span> <span class="token punctuation">\\</span>
<span class="token parameter variable">-nodes</span> <span class="token punctuation">\\</span>
<span class="token parameter variable">-days</span> <span class="token number">365</span> <span class="token punctuation">\\</span>
<span class="token parameter variable">-newkey</span> rsa:2048 <span class="token punctuation">\\</span>
<span class="token parameter variable">-keyout</span> priviate.key <span class="token punctuation">\\</span>
<span class="token parameter variable">-out</span> nginx.crt <span class="token punctuation">\\</span>
<span class="token parameter variable">-config</span> req.cnf <span class="token punctuation">\\</span>
<span class="token parameter variable">-sha256</span> <span class="token punctuation">\\</span>
<span class="token parameter variable">-extensions</span> v3_req
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,34)]))}const o=e(i,[["render",l],["__file","常见证书说明.html.vue"]]),d=JSON.parse('{"path":"/guide/program/%E5%B8%B8%E8%A7%81%E8%AF%81%E4%B9%A6%E8%AF%B4%E6%98%8E.html","title":"常见证书说明","lang":"zh-CN","frontmatter":{"title":"常见证书说明","description":"X.509证书标准定义 PEM、DER --- 文件拓展名: --- CRT和CER是一种东西，只是后缀名不一样：也同样有两种格式: Base64和字节码 PEM: 纯文本文件, 以-----BEGIN 某某某-----开头, 以-----END 某某某-----结尾, 内容是 base64 编码 DER: 二进制文件格式, 一般应使用 Windows...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/vuepress-doc/guide/program/%E5%B8%B8%E8%A7%81%E8%AF%81%E4%B9%A6%E8%AF%B4%E6%98%8E.html"}],["meta",{"property":"og:site_name","content":"折戟沉沙、丿"}],["meta",{"property":"og:title","content":"常见证书说明"}],["meta",{"property":"og:description","content":"X.509证书标准定义 PEM、DER --- 文件拓展名: --- CRT和CER是一种东西，只是后缀名不一样：也同样有两种格式: Base64和字节码 PEM: 纯文本文件, 以-----BEGIN 某某某-----开头, 以-----END 某某某-----结尾, 内容是 base64 编码 DER: 二进制文件格式, 一般应使用 Windows..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-19T05:09:05.000Z"}],["meta",{"property":"article:author","content":"bincooo"}],["meta",{"property":"article:modified_time","content":"2025-07-19T05:09:05.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"常见证书说明\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-19T05:09:05.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"bincooo\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":3,"title":"X.509证书标准定义","slug":"x-509证书标准定义","link":"#x-509证书标准定义","children":[]},{"level":3,"title":"证书编码的转换","slug":"证书编码的转换","link":"#证书编码的转换","children":[]},{"level":3,"title":"生成CSR时翻译说明","slug":"生成csr时翻译说明","link":"#生成csr时翻译说明","children":[]},{"level":3,"title":"自颁发证书指令","slug":"自颁发证书指令","link":"#自颁发证书指令","children":[]},{"level":3,"title":"证书转换","slug":"证书转换","link":"#证书转换","children":[]},{"level":3,"title":"测试可用自签名步骤","slug":"测试可用自签名步骤","link":"#测试可用自签名步骤","children":[]},{"level":3,"title":"生成指令","slug":"生成指令","link":"#生成指令","children":[]}],"git":{"createdTime":1752901745000,"updatedTime":1752901745000,"contributors":[{"name":"折戟沉沙、丿","email":"36452456+bincooo@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":2.88,"words":863},"filePathRelative":"guide/program/常见证书说明.md","localizedDate":"2025年7月19日","autoDesc":true}');export{o as comp,d as data};
