const l=JSON.parse('{"key":"v-95f5f550","path":"/guide/markdown/Java%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B8/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8860%E9%81%93%E5%90%AB%E7%AD%94%E6%A1%88%EF%BC%89.html","title":"","lang":"zh-CN","frontmatter":{"description":"目录 1. 多线程有什么用？ 2. 线程和进程的区别是什么？ 3. Java 实现线程有哪几种方式？ 4. 启动线程方法 start()和 run()有什么区别？ 5. 怎么终止一个线程？如何优雅地终止线程？ 6. 一个线程的生命周期有哪几种状态？它们之间如何流转的？ 7. 线程中的 wait()和 sleep()方法有什么区别？ 8. 多线程同步有哪几种方法？ 9. 什么是死锁？如何避免死锁？ 10. 多线程之间如何进行通信？ 11. 线程怎样拿到返回结果？ 12. violatile 关键字的作用？ 13. 新建 T1、T2、T3 三个线程，如何保证它们按顺序执行？ 14. 怎么控制同一时间只有 3 个线程运行？ 15. 为什么要使用线程池？ 16. 常用的几种线程池并讲讲其中的工作原理。什么是线程池？ 17. 线程池启动线程 submit()和 execute()方法有什么不同？ 18. CyclicBarrier 和 CountDownLatch 的区别？ 19. 什么是活锁、饥饿、无锁、死锁？ 20. 什么是原子性、可见性、有序性？ 21. 什么是守护线程？有什么用？ 22. 一个线程运行时发生异常会怎样？ 23. 线程 yield()方法有什么用？ 24. 什么是重入锁？ 25. Synchronized 有哪几种用法？ 26. Fork/Join 框架是干什么的？ 27. 线程数过多会造成什么异常？ 28. 说说线程安全的和不安全的集合。 29. 什么是 CAS 算法？在多线程中有哪些应用。 30. 怎么检测一个线程是否拥有锁？ 31. Jdk 中排查多线程问题用什么命令？ 32. 线程同步需要注意什么？ 33. 线程 wait()方法使用有什么前提？ 34. Fork/Join 框架使用有哪些要注意的地方？ 35. 线程之间如何传递数据？ 36. 保证\\"可见性\\"有哪几种方式？ 37. 说几个常用的 Lock 接口实现锁。 38. ThreadLocal 是什么？有什么应用场景？ 39. ReadWriteLock 有什么用？ 40. FutureTask 是什么？ 41. 怎么唤醒一个阻塞的线程？ 42. 不可变对象对多线程有什么帮助？ 43. 多线程上下文切换是什么意思？ 44. Java 中用到了什么线程调度算法？ 45. Thread.sleep(0)的作用是什么？ 46. Java 内存模型是什么，哪些区域是线程共享的，哪些是不共享的？ 47. 什么是乐观锁和悲观锁？ 48. Hashtable 的 size()方法为什么要做同步？ 49. 同步方法和同步块，哪种更好？ 50. 什么是自旋锁？ 51. Runnable 和 Thread 用哪个好？ 52. Java 中 notify 和 notifyAll 有什么区别？ 53. 为什么 wait/notify/notifyAll 这些方法不在thread类里面？ 54. 为什么 wait 和 notify 方法要在同步块中调用？ 55. 为什么你应该在循环中检查等待条件？ 56. Java 中堆和栈有什么不同？ 57. 你如何在 Java 中获取线程堆栈？ 58. 如何创建线程安全的单例模式？ 59. 什么是阻塞式方法？ 60. 提交任务时线程池队列已满会时发会生什么？","head":[["meta",{"property":"og:url","content":"https://www.icu-web.tk/vuepress-doc/guide/markdown/Java%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B8/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8860%E9%81%93%E5%90%AB%E7%AD%94%E6%A1%88%EF%BC%89.html"}],["meta",{"property":"og:site_name","content":"折戟沉沙、丿"}],["meta",{"property":"og:description","content":"目录 1. 多线程有什么用？ 2. 线程和进程的区别是什么？ 3. Java 实现线程有哪几种方式？ 4. 启动线程方法 start()和 run()有什么区别？ 5. 怎么终止一个线程？如何优雅地终止线程？ 6. 一个线程的生命周期有哪几种状态？它们之间如何流转的？ 7. 线程中的 wait()和 sleep()方法有什么区别？ 8. 多线程同步有哪几种方法？ 9. 什么是死锁？如何避免死锁？ 10. 多线程之间如何进行通信？ 11. 线程怎样拿到返回结果？ 12. violatile 关键字的作用？ 13. 新建 T1、T2、T3 三个线程，如何保证它们按顺序执行？ 14. 怎么控制同一时间只有 3 个线程运行？ 15. 为什么要使用线程池？ 16. 常用的几种线程池并讲讲其中的工作原理。什么是线程池？ 17. 线程池启动线程 submit()和 execute()方法有什么不同？ 18. CyclicBarrier 和 CountDownLatch 的区别？ 19. 什么是活锁、饥饿、无锁、死锁？ 20. 什么是原子性、可见性、有序性？ 21. 什么是守护线程？有什么用？ 22. 一个线程运行时发生异常会怎样？ 23. 线程 yield()方法有什么用？ 24. 什么是重入锁？ 25. Synchronized 有哪几种用法？ 26. Fork/Join 框架是干什么的？ 27. 线程数过多会造成什么异常？ 28. 说说线程安全的和不安全的集合。 29. 什么是 CAS 算法？在多线程中有哪些应用。 30. 怎么检测一个线程是否拥有锁？ 31. Jdk 中排查多线程问题用什么命令？ 32. 线程同步需要注意什么？ 33. 线程 wait()方法使用有什么前提？ 34. Fork/Join 框架使用有哪些要注意的地方？ 35. 线程之间如何传递数据？ 36. 保证\\"可见性\\"有哪几种方式？ 37. 说几个常用的 Lock 接口实现锁。 38. ThreadLocal 是什么？有什么应用场景？ 39. ReadWriteLock 有什么用？ 40. FutureTask 是什么？ 41. 怎么唤醒一个阻塞的线程？ 42. 不可变对象对多线程有什么帮助？ 43. 多线程上下文切换是什么意思？ 44. Java 中用到了什么线程调度算法？ 45. Thread.sleep(0)的作用是什么？ 46. Java 内存模型是什么，哪些区域是线程共享的，哪些是不共享的？ 47. 什么是乐观锁和悲观锁？ 48. Hashtable 的 size()方法为什么要做同步？ 49. 同步方法和同步块，哪种更好？ 50. 什么是自旋锁？ 51. Runnable 和 Thread 用哪个好？ 52. Java 中 notify 和 notifyAll 有什么区别？ 53. 为什么 wait/notify/notifyAll 这些方法不在thread类里面？ 54. 为什么 wait 和 notify 方法要在同步块中调用？ 55. 为什么你应该在循环中检查等待条件？ 56. Java 中堆和栈有什么不同？ 57. 你如何在 Java 中获取线程堆栈？ 58. 如何创建线程安全的单例模式？ 59. 什么是阻塞式方法？ 60. 提交任务时线程池队列已满会时发会生什么？"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-05T14:04:17.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-05T14:04:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-05T14:04:17.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":3,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":2,"title":"1. 多线程有什么用？","slug":"_1-多线程有什么用","link":"#_1-多线程有什么用","children":[]},{"level":2,"title":"2. 线程和进程的区别是什么？","slug":"_2-线程和进程的区别是什么","link":"#_2-线程和进程的区别是什么","children":[]},{"level":2,"title":"3. Java 实现线程有哪几种方式？","slug":"_3-java-实现线程有哪几种方式","link":"#_3-java-实现线程有哪几种方式","children":[]},{"level":2,"title":"4. 启动线程方法 start()和 run()有什么区别？","slug":"_4-启动线程方法-start-和-run-有什么区别","link":"#_4-启动线程方法-start-和-run-有什么区别","children":[]},{"level":2,"title":"5. 怎么终止一个线程？如何优雅地终止线程？","slug":"_5-怎么终止一个线程-如何优雅地终止线程","link":"#_5-怎么终止一个线程-如何优雅地终止线程","children":[]},{"level":2,"title":"6. 一个线程的生命周期有哪几种状态？它们之间如何流转的？","slug":"_6-一个线程的生命周期有哪几种状态-它们之间如何流转的","link":"#_6-一个线程的生命周期有哪几种状态-它们之间如何流转的","children":[]},{"level":2,"title":"7. 线程中的 wait()和 sleep()方法有什么区别？","slug":"_7-线程中的-wait-和-sleep-方法有什么区别","link":"#_7-线程中的-wait-和-sleep-方法有什么区别","children":[]},{"level":2,"title":"8. 多线程同步有哪几种方法？","slug":"_8-多线程同步有哪几种方法","link":"#_8-多线程同步有哪几种方法","children":[]},{"level":2,"title":"9. 什么是死锁？如何避免死锁？","slug":"_9-什么是死锁-如何避免死锁","link":"#_9-什么是死锁-如何避免死锁","children":[]},{"level":2,"title":"10. 多线程之间如何进行通信？","slug":"_10-多线程之间如何进行通信","link":"#_10-多线程之间如何进行通信","children":[]},{"level":2,"title":"11. 线程怎样拿到返回结果？","slug":"_11-线程怎样拿到返回结果","link":"#_11-线程怎样拿到返回结果","children":[]},{"level":2,"title":"12. violatile 关键字的作用？","slug":"_12-violatile-关键字的作用","link":"#_12-violatile-关键字的作用","children":[]},{"level":2,"title":"13. 新建 T1、T2、T3 三个线程，如何保证它们按顺序执行？","slug":"_13-新建-t1、t2、t3-三个线程-如何保证它们按顺序执行","link":"#_13-新建-t1、t2、t3-三个线程-如何保证它们按顺序执行","children":[]},{"level":2,"title":"14. 怎么控制同一时间只有 3 个线程运行？","slug":"_14-怎么控制同一时间只有-3-个线程运行","link":"#_14-怎么控制同一时间只有-3-个线程运行","children":[]},{"level":2,"title":"15. 为什么要使用线程池？","slug":"_15-为什么要使用线程池","link":"#_15-为什么要使用线程池","children":[]},{"level":2,"title":"16. 常用的几种线程池并讲讲其中的工作原理。什么是线程池？","slug":"_16-常用的几种线程池并讲讲其中的工作原理。什么是线程池","link":"#_16-常用的几种线程池并讲讲其中的工作原理。什么是线程池","children":[]},{"level":2,"title":"17. 线程池启动线程 submit()和 execute()方法有什么不同？","slug":"_17-线程池启动线程-submit-和-execute-方法有什么不同","link":"#_17-线程池启动线程-submit-和-execute-方法有什么不同","children":[]},{"level":2,"title":"18. CyclicBarrier 和 CountDownLatch 的区别？","slug":"_18-cyclicbarrier-和-countdownlatch-的区别","link":"#_18-cyclicbarrier-和-countdownlatch-的区别","children":[]},{"level":2,"title":"19. 什么是活锁、饥饿、无锁、死锁？","slug":"_19-什么是活锁、饥饿、无锁、死锁","link":"#_19-什么是活锁、饥饿、无锁、死锁","children":[]},{"level":2,"title":"20. 什么是原子性、可见性、有序性？","slug":"_20-什么是原子性、可见性、有序性","link":"#_20-什么是原子性、可见性、有序性","children":[]},{"level":2,"title":"21. 什么是守护线程？有什么用？","slug":"_21-什么是守护线程-有什么用","link":"#_21-什么是守护线程-有什么用","children":[]},{"level":2,"title":"22. 一个线程运行时发生异常会怎样？","slug":"_22-一个线程运行时发生异常会怎样","link":"#_22-一个线程运行时发生异常会怎样","children":[]},{"level":2,"title":"23. 线程 yield()方法有什么用？","slug":"_23-线程-yield-方法有什么用","link":"#_23-线程-yield-方法有什么用","children":[]},{"level":2,"title":"24. 什么是重入锁？","slug":"_24-什么是重入锁","link":"#_24-什么是重入锁","children":[]},{"level":2,"title":"25. Synchronized 有哪几种用法？","slug":"_25-synchronized-有哪几种用法","link":"#_25-synchronized-有哪几种用法","children":[]},{"level":2,"title":"26. Fork/Join 框架是干什么的？","slug":"_26-fork-join-框架是干什么的","link":"#_26-fork-join-框架是干什么的","children":[]},{"level":2,"title":"27. 线程数过多会造成什么异常？","slug":"_27-线程数过多会造成什么异常","link":"#_27-线程数过多会造成什么异常","children":[]},{"level":2,"title":"28. 说说线程安全的和不安全的集合。","slug":"_28-说说线程安全的和不安全的集合。","link":"#_28-说说线程安全的和不安全的集合。","children":[]},{"level":2,"title":"29. 什么是 CAS 算法？在多线程中有哪些应用。","slug":"_29-什么是-cas-算法-在多线程中有哪些应用。","link":"#_29-什么是-cas-算法-在多线程中有哪些应用。","children":[]},{"level":2,"title":"30. 怎么检测一个线程是否拥有锁？","slug":"_30-怎么检测一个线程是否拥有锁","link":"#_30-怎么检测一个线程是否拥有锁","children":[]},{"level":2,"title":"31. Jdk 中排查多线程问题用什么命令？","slug":"_31-jdk-中排查多线程问题用什么命令","link":"#_31-jdk-中排查多线程问题用什么命令","children":[]},{"level":2,"title":"32. 线程同步需要注意什么？","slug":"_32-线程同步需要注意什么","link":"#_32-线程同步需要注意什么","children":[]},{"level":2,"title":"33. 线程 wait()方法使用有什么前提？","slug":"_33-线程-wait-方法使用有什么前提","link":"#_33-线程-wait-方法使用有什么前提","children":[]},{"level":2,"title":"34. Fork/Join 框架使用有哪些要注意的地方？","slug":"_34-fork-join-框架使用有哪些要注意的地方","link":"#_34-fork-join-框架使用有哪些要注意的地方","children":[]},{"level":2,"title":"35. 线程之间如何传递数据？","slug":"_35-线程之间如何传递数据","link":"#_35-线程之间如何传递数据","children":[]},{"level":2,"title":"36. 保证\\"可见性\\"有哪几种方式？","slug":"_36-保证-可见性-有哪几种方式","link":"#_36-保证-可见性-有哪几种方式","children":[]},{"level":2,"title":"37. 说几个常用的 Lock 接口实现锁。","slug":"_37-说几个常用的-lock-接口实现锁。","link":"#_37-说几个常用的-lock-接口实现锁。","children":[]},{"level":2,"title":"38. ThreadLocal 是什么？有什么应用场景？","slug":"_38-threadlocal-是什么-有什么应用场景","link":"#_38-threadlocal-是什么-有什么应用场景","children":[]},{"level":2,"title":"39. ReadWriteLock 有什么用？","slug":"_39-readwritelock-有什么用","link":"#_39-readwritelock-有什么用","children":[]},{"level":2,"title":"40. FutureTask 是什么？","slug":"_40-futuretask-是什么","link":"#_40-futuretask-是什么","children":[]},{"level":2,"title":"41. 怎么唤醒一个阻塞的线程？","slug":"_41-怎么唤醒一个阻塞的线程","link":"#_41-怎么唤醒一个阻塞的线程","children":[]},{"level":2,"title":"42. 不可变对象对多线程有什么帮助？","slug":"_42-不可变对象对多线程有什么帮助","link":"#_42-不可变对象对多线程有什么帮助","children":[]},{"level":2,"title":"43. 多线程上下文切换是什么意思？","slug":"_43-多线程上下文切换是什么意思","link":"#_43-多线程上下文切换是什么意思","children":[]},{"level":2,"title":"44. Java 中用到了什么线程调度算法？","slug":"_44-java-中用到了什么线程调度算法","link":"#_44-java-中用到了什么线程调度算法","children":[]},{"level":2,"title":"45. Thread.sleep(0)的作用是什么？","slug":"_45-thread-sleep-0-的作用是什么","link":"#_45-thread-sleep-0-的作用是什么","children":[]},{"level":2,"title":"46. Java 内存模型是什么，哪些区域是线程共享的，哪些是不共享的？","slug":"_46-java-内存模型是什么-哪些区域是线程共享的-哪些是不共享的","link":"#_46-java-内存模型是什么-哪些区域是线程共享的-哪些是不共享的","children":[]},{"level":2,"title":"47. 什么是乐观锁和悲观锁？","slug":"_47-什么是乐观锁和悲观锁","link":"#_47-什么是乐观锁和悲观锁","children":[]},{"level":2,"title":"48. Hashtable 的 size()方法为什么要做同步？","slug":"_48-hashtable-的-size-方法为什么要做同步","link":"#_48-hashtable-的-size-方法为什么要做同步","children":[]},{"level":2,"title":"49. 同步方法和同步块，哪种更好？","slug":"_49-同步方法和同步块-哪种更好","link":"#_49-同步方法和同步块-哪种更好","children":[]},{"level":2,"title":"50. 什么是自旋锁？","slug":"_50-什么是自旋锁","link":"#_50-什么是自旋锁","children":[]},{"level":2,"title":"51. Runnable 和 Thread 用哪个好？","slug":"_51-runnable-和-thread-用哪个好","link":"#_51-runnable-和-thread-用哪个好","children":[]},{"level":2,"title":"52. Java 中 notify 和 notifyAll 有什么区别？","slug":"_52-java-中-notify-和-notifyall-有什么区别","link":"#_52-java-中-notify-和-notifyall-有什么区别","children":[]},{"level":2,"title":"53. 为什么 wait/notify/notifyAll 这些方法不在thread类里面？","slug":"_53-为什么-wait-notify-notifyall-这些方法不在thread类里面","link":"#_53-为什么-wait-notify-notifyall-这些方法不在thread类里面","children":[]},{"level":2,"title":"54. 为什么 wait 和 notify 方法要在同步块中调用？","slug":"_54-为什么-wait-和-notify-方法要在同步块中调用","link":"#_54-为什么-wait-和-notify-方法要在同步块中调用","children":[]},{"level":2,"title":"55. 为什么你应该在循环中检查等待条件？","slug":"_55-为什么你应该在循环中检查等待条件","link":"#_55-为什么你应该在循环中检查等待条件","children":[]},{"level":2,"title":"56. Java 中堆和栈有什么不同？","slug":"_56-java-中堆和栈有什么不同","link":"#_56-java-中堆和栈有什么不同","children":[]},{"level":2,"title":"57. 你如何在 Java 中获取线程堆栈？","slug":"_57-你如何在-java-中获取线程堆栈","link":"#_57-你如何在-java-中获取线程堆栈","children":[]},{"level":2,"title":"58. 如何创建线程安全的单例模式？","slug":"_58-如何创建线程安全的单例模式","link":"#_58-如何创建线程安全的单例模式","children":[]},{"level":2,"title":"59. 什么是阻塞式方法？","slug":"_59-什么是阻塞式方法","link":"#_59-什么是阻塞式方法","children":[]},{"level":2,"title":"60. 提交任务时线程池队列已满会时发会生什么？","slug":"_60-提交任务时线程池队列已满会时发会生什么","link":"#_60-提交任务时线程池队列已满会时发会生什么","children":[]}],"git":{"createdTime":1693922657000,"updatedTime":1693922657000,"contributors":[{"name":"bincooo","email":"admin@bincooodeiMac.local","commits":1}]},"readingTime":{"minutes":32.41,"words":9723},"filePathRelative":"guide/markdown/Java面试宝典/多线程面试题（60道含答案）.md","localizedDate":"2023年9月5日","excerpt":"<h3> 目录</h3>\\n<ul>\\n<li>\\n<ul>\\n<li><a href=\\"#1__2\\">1. 多线程有什么用？</a></li>\\n<li><a href=\\"#2__10\\">2. 线程和进程的区别是什么？</a></li>\\n<li><a href=\\"#3_Java__13\\">3. Java 实现线程有哪几种方式？</a></li>\\n<li><a href=\\"#4__start_run_18\\">4. 启动线程方法 start()和 run()有什么区别？</a></li>\\n<li><a href=\\"#5__22\\">5. 怎么终止一个线程？如何优雅地终止线程？</a></li>\\n<li><a href=\\"#6__25\\">6. 一个线程的生命周期有哪几种状态？它们之间如何流转的？</a></li>\\n<li><a href=\\"#7__wait_sleep_31\\">7. 线程中的 wait()和 sleep()方法有什么区别？</a></li>\\n<li><a href=\\"#8__35\\">8. 多线程同步有哪几种方法？</a></li>\\n<li><a href=\\"#9__38\\">9. 什么是死锁？如何避免死锁？</a></li>\\n<li><a href=\\"#10__41\\">10. 多线程之间如何进行通信？</a></li>\\n<li><a href=\\"#11__44\\">11. 线程怎样拿到返回结果？</a></li>\\n<li><a href=\\"#12_violatile__47\\">12. violatile 关键字的作用？</a></li>\\n<li><a href=\\"#13__T1T2T3__50\\">13. 新建 T1、T2、T3 三个线程，如何保证它们按顺序执行？</a></li>\\n<li><a href=\\"#14__3__53\\">14. 怎么控制同一时间只有 3 个线程运行？</a></li>\\n<li><a href=\\"#15__56\\">15. 为什么要使用线程池？</a></li>\\n<li><a href=\\"#16__59\\">16. 常用的几种线程池并讲讲其中的工作原理。什么是线程池？</a></li>\\n<li><a href=\\"#17__submit_execute_73\\">17. 线程池启动线程 submit()和 execute()方法有什么不同？</a></li>\\n<li><a href=\\"#18_CyclicBarrier__CountDownLatch__77\\">18. CyclicBarrier 和 CountDownLatch 的区别？</a></li>\\n<li><a href=\\"#19__82\\">19. 什么是活锁、饥饿、无锁、死锁？</a></li>\\n<li><a href=\\"#20__94\\">20. 什么是原子性、可见性、有序性？</a></li>\\n<li><a href=\\"#21__103\\">21. 什么是守护线程？有什么用？</a></li>\\n<li><a href=\\"#22__106\\">22. 一个线程运行时发生异常会怎样？</a></li>\\n<li><a href=\\"#23__yield_109\\">23. 线程 yield()方法有什么用？</a></li>\\n<li><a href=\\"#24__112\\">24. 什么是重入锁？</a></li>\\n<li><a href=\\"#25_Synchronized__115\\">25. Synchronized 有哪几种用法？</a></li>\\n<li><a href=\\"#26_ForkJoin__118\\">26. Fork/Join 框架是干什么的？</a></li>\\n<li><a href=\\"#27__121\\">27. 线程数过多会造成什么异常？</a></li>\\n<li><a href=\\"#28__124\\">28. 说说线程安全的和不安全的集合。</a></li>\\n<li><a href=\\"#29__CAS__129\\">29. 什么是 CAS 算法？在多线程中有哪些应用。</a></li>\\n<li><a href=\\"#30__133\\">30. 怎么检测一个线程是否拥有锁？</a></li>\\n<li><a href=\\"#31_Jdk__136\\">31. Jdk 中排查多线程问题用什么命令？</a></li>\\n<li><a href=\\"#32__139\\">32. 线程同步需要注意什么？</a></li>\\n<li><a href=\\"#33__wait_144\\">33. 线程 wait()方法使用有什么前提？</a></li>\\n<li><a href=\\"#34_ForkJoin__147\\">34. Fork/Join 框架使用有哪些要注意的地方？</a></li>\\n<li><a href=\\"#35__150\\">35. 线程之间如何传递数据？</a></li>\\n<li><a href=\\"#36__153\\">36. 保证\\"可见性\\"有哪几种方式？</a></li>\\n<li><a href=\\"#37__Lock__156\\">37. 说几个常用的 Lock 接口实现锁。</a></li>\\n<li><a href=\\"#38_ThreadLocal__159\\">38. ThreadLocal 是什么？有什么应用场景？</a></li>\\n<li><a href=\\"#39_ReadWriteLock__162\\">39. ReadWriteLock 有什么用？</a></li>\\n<li><a href=\\"#40_FutureTask__165\\">40. FutureTask 是什么？</a></li>\\n<li><a href=\\"#41__168\\">41. 怎么唤醒一个阻塞的线程？</a></li>\\n<li><a href=\\"#42__171\\">42. 不可变对象对多线程有什么帮助？</a></li>\\n<li><a href=\\"#43__174\\">43. 多线程上下文切换是什么意思？</a></li>\\n<li><a href=\\"#44_Java__177\\">44. Java 中用到了什么线程调度算法？</a></li>\\n<li><a href=\\"#45_Threadsleep0_180\\">45. Thread.sleep(0)的作用是什么？</a></li>\\n<li><a href=\\"#46_Java__183\\">46. Java 内存模型是什么，哪些区域是线程共享的，哪些是不共享的？</a></li>\\n<li><a href=\\"#47__200\\">47. 什么是乐观锁和悲观锁？</a></li>\\n<li><a href=\\"#48_Hashtable__size_204\\">48. Hashtable 的 size()方法为什么要做同步？</a></li>\\n<li><a href=\\"#49__208\\">49. 同步方法和同步块，哪种更好？</a></li>\\n<li><a href=\\"#50__212\\">50. 什么是自旋锁？</a></li>\\n<li><a href=\\"#51_Runnable__Thread__215\\">51. Runnable 和 Thread 用哪个好？</a></li>\\n<li><a href=\\"#52_Java__notify__notifyAll__218\\">52. Java 中 notify 和 notifyAll 有什么区别？</a></li>\\n<li><a href=\\"#53__waitnotifynotifyAll_thread_222\\">53. 为什么 wait/notify/notifyAll 这些方法不在thread类里面？</a></li>\\n<li><a href=\\"#54__wait__notify__226\\">54. 为什么 wait 和 notify 方法要在同步块中调用？</a></li>\\n<li><a href=\\"#55__229\\">55. 为什么你应该在循环中检查等待条件？</a></li>\\n<li><a href=\\"#56_Java__232\\">56. Java 中堆和栈有什么不同？</a></li>\\n<li><a href=\\"#57__Java__235\\">57. 你如何在 Java 中获取线程堆栈？</a></li>\\n<li><a href=\\"#58__238\\">58. 如何创建线程安全的单例模式？</a></li>\\n<li><a href=\\"#59__244\\">59. 什么是阻塞式方法？</a></li>\\n<li><a href=\\"#60__247\\">60. 提交任务时线程池队列已满会时发会生什么？</a></li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}');export{l as data};
