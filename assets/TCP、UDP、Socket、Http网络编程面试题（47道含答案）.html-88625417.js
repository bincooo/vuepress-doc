const l=JSON.parse('{"key":"v-7231b2d2","path":"/guide/markdown/Java%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B8/TCP%E3%80%81UDP%E3%80%81Socket%E3%80%81Http%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8847%E9%81%93%E5%90%AB%E7%AD%94%E6%A1%88%EF%BC%89.html","title":"","lang":"zh-CN","frontmatter":{"description":"目录 1. 什么是网络编程 2. 网络编程中两个主要的问题 3. 网络协议是什么 4. 为什么要对网络协议分层 5. 计算机网络体系结构 1 TCP / UDP 1.1 什么是TCP/IP和UDP 1.2 TCP与UDP区别： 1.3 TCP和UDP的应用场景： 1.4 形容一下TCP和UDP 1.5 运行在TCP 或UDP的应用层协议分析。 1.6 什么是ARP协议 (Address Resolution Protocol)？ 1.7 什么是NAT (Network Address Translation, 网络地址转换)？ 1.8 从输入址到获得页面的过程? 1.9 TCP的三次握手 1.9.1 什么是TCP的三次握手 1.9.2 三次握手的具体细节 1.9.3 用现实理解三次握手的具体细节 1.9.4 建立连接可以两次握手吗？为什么? 1.9.5 可以采用四次握手吗？为什么？ 1.9.6 第三次握手中，如果客户端的ACK未送达服务器，会怎样？ 1.9.7 如果已经建立了连接，但客户端出现了故障怎么办？ 1.9.8 初始序列号是什么？ 1.10 TCP的四次挥手 1.10.1 什么是TCP的四次挥手 1.10.2 四次挥手的具体细节 1.10.3 用现实理解三次握手的具体细节TCP的四次挥手 1.10.4 为什么不能把服务器发送的ACK和FIN合并起来，变成三次挥手（CLOSE_WAIT状态意义是什么）？ 1.10.5 如果第二次挥手时服务器的ACK没有送达客户端，会怎样？ 1.10.6 客户端TIME_WAIT状态的意义是什么？ 2 Socket 1 什么是Socket 2 socket属于网络的那个层面 3 Socket通讯的过程 4 TCP协议Socket代码示例： 5 UDP协议Socket代码示例： 6 Socket的常用类 3. HTTP 1. 什么是Http协议？ 2. Socket和http的区别和应用场景 3. 什么是http的请求体？ 4. http的响应报文有哪些？ 5. http和https的区别？ 6. HTTPS工作原理 7. 一次完整的HTTP请求所经历几个步骤? 8. 常用HTTP状态码是怎么分类的，有哪些常见的状态码？ 9. Http协议中有那些请求方式 10. GET方法与POST方法的区别 11. http版本的对比 12. 什么是对称加密与非对称加密 13. cookie和session对于HTTP有什么用？ 14. 什么是cookie 15. 什么是session","head":[["meta",{"property":"og:url","content":"https://www.icu-web.tk/vuepress-doc/guide/markdown/Java%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B8/TCP%E3%80%81UDP%E3%80%81Socket%E3%80%81Http%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8847%E9%81%93%E5%90%AB%E7%AD%94%E6%A1%88%EF%BC%89.html"}],["meta",{"property":"og:site_name","content":"折戟沉沙、丿"}],["meta",{"property":"og:description","content":"目录 1. 什么是网络编程 2. 网络编程中两个主要的问题 3. 网络协议是什么 4. 为什么要对网络协议分层 5. 计算机网络体系结构 1 TCP / UDP 1.1 什么是TCP/IP和UDP 1.2 TCP与UDP区别： 1.3 TCP和UDP的应用场景： 1.4 形容一下TCP和UDP 1.5 运行在TCP 或UDP的应用层协议分析。 1.6 什么是ARP协议 (Address Resolution Protocol)？ 1.7 什么是NAT (Network Address Translation, 网络地址转换)？ 1.8 从输入址到获得页面的过程? 1.9 TCP的三次握手 1.9.1 什么是TCP的三次握手 1.9.2 三次握手的具体细节 1.9.3 用现实理解三次握手的具体细节 1.9.4 建立连接可以两次握手吗？为什么? 1.9.5 可以采用四次握手吗？为什么？ 1.9.6 第三次握手中，如果客户端的ACK未送达服务器，会怎样？ 1.9.7 如果已经建立了连接，但客户端出现了故障怎么办？ 1.9.8 初始序列号是什么？ 1.10 TCP的四次挥手 1.10.1 什么是TCP的四次挥手 1.10.2 四次挥手的具体细节 1.10.3 用现实理解三次握手的具体细节TCP的四次挥手 1.10.4 为什么不能把服务器发送的ACK和FIN合并起来，变成三次挥手（CLOSE_WAIT状态意义是什么）？ 1.10.5 如果第二次挥手时服务器的ACK没有送达客户端，会怎样？ 1.10.6 客户端TIME_WAIT状态的意义是什么？ 2 Socket 1 什么是Socket 2 socket属于网络的那个层面 3 Socket通讯的过程 4 TCP协议Socket代码示例： 5 UDP协议Socket代码示例： 6 Socket的常用类 3. HTTP 1. 什么是Http协议？ 2. Socket和http的区别和应用场景 3. 什么是http的请求体？ 4. http的响应报文有哪些？ 5. http和https的区别？ 6. HTTPS工作原理 7. 一次完整的HTTP请求所经历几个步骤? 8. 常用HTTP状态码是怎么分类的，有哪些常见的状态码？ 9. Http协议中有那些请求方式 10. GET方法与POST方法的区别 11. http版本的对比 12. 什么是对称加密与非对称加密 13. cookie和session对于HTTP有什么用？ 14. 什么是cookie 15. 什么是session"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-05T14:04:17.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-05T14:04:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-05T14:04:17.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":3,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":2,"title":"1. 什么是网络编程","slug":"_1-什么是网络编程","link":"#_1-什么是网络编程","children":[]},{"level":2,"title":"2. 网络编程中两个主要的问题","slug":"_2-网络编程中两个主要的问题","link":"#_2-网络编程中两个主要的问题","children":[]},{"level":2,"title":"3. 网络协议是什么","slug":"_3-网络协议是什么","link":"#_3-网络协议是什么","children":[]},{"level":2,"title":"4. 为什么要对网络协议分层","slug":"_4-为什么要对网络协议分层","link":"#_4-为什么要对网络协议分层","children":[]},{"level":2,"title":"5. 计算机网络体系结构","slug":"_5-计算机网络体系结构","link":"#_5-计算机网络体系结构","children":[]},{"level":2,"title":"1 TCP / UDP","slug":"_1-tcp-udp","link":"#_1-tcp-udp","children":[{"level":3,"title":"1.1 什么是TCP/IP和UDP","slug":"_1-1-什么是tcp-ip和udp","link":"#_1-1-什么是tcp-ip和udp","children":[]},{"level":3,"title":"1.2 TCP与UDP区别：","slug":"_1-2-tcp与udp区别","link":"#_1-2-tcp与udp区别","children":[]},{"level":3,"title":"1.3 TCP和UDP的应用场景：","slug":"_1-3-tcp和udp的应用场景","link":"#_1-3-tcp和udp的应用场景","children":[]},{"level":3,"title":"1.4 形容一下TCP和UDP","slug":"_1-4-形容一下tcp和udp","link":"#_1-4-形容一下tcp和udp","children":[]},{"level":3,"title":"1.5 运行在TCP 或UDP的应用层协议分析。","slug":"_1-5-运行在tcp-或udp的应用层协议分析。","link":"#_1-5-运行在tcp-或udp的应用层协议分析。","children":[]},{"level":3,"title":"1.6 什么是ARP协议 (Address Resolution Protocol)？","slug":"_1-6-什么是arp协议-address-resolution-protocol","link":"#_1-6-什么是arp协议-address-resolution-protocol","children":[]},{"level":3,"title":"1.7 什么是NAT (Network Address Translation, 网络地址转换)？","slug":"_1-7-什么是nat-network-address-translation-网络地址转换","link":"#_1-7-什么是nat-network-address-translation-网络地址转换","children":[]},{"level":3,"title":"1.8 从输入址到获得页面的过程?","slug":"_1-8-从输入址到获得页面的过程","link":"#_1-8-从输入址到获得页面的过程","children":[]},{"level":3,"title":"1.9 TCP的三次握手","slug":"_1-9-tcp的三次握手","link":"#_1-9-tcp的三次握手","children":[]},{"level":3,"title":"1.10 TCP的四次挥手","slug":"_1-10-tcp的四次挥手","link":"#_1-10-tcp的四次挥手","children":[]}]},{"level":2,"title":"2 Socket","slug":"_2-socket","link":"#_2-socket","children":[{"level":3,"title":"1 什么是Socket","slug":"_1-什么是socket","link":"#_1-什么是socket","children":[]},{"level":3,"title":"2 socket属于网络的那个层面","slug":"_2-socket属于网络的那个层面","link":"#_2-socket属于网络的那个层面","children":[]},{"level":3,"title":"3 Socket通讯的过程","slug":"_3-socket通讯的过程","link":"#_3-socket通讯的过程","children":[]},{"level":3,"title":"4 TCP协议Socket代码示例：","slug":"_4-tcp协议socket代码示例","link":"#_4-tcp协议socket代码示例","children":[]},{"level":3,"title":"5 UDP协议Socket代码示例：","slug":"_5-udp协议socket代码示例","link":"#_5-udp协议socket代码示例","children":[]},{"level":3,"title":"6 Socket的常用类","slug":"_6-socket的常用类","link":"#_6-socket的常用类","children":[]}]},{"level":2,"title":"3. HTTP","slug":"_3-http","link":"#_3-http","children":[{"level":3,"title":"1. 什么是Http协议？","slug":"_1-什么是http协议","link":"#_1-什么是http协议","children":[]},{"level":3,"title":"2. Socket和http的区别和应用场景","slug":"_2-socket和http的区别和应用场景","link":"#_2-socket和http的区别和应用场景","children":[]},{"level":3,"title":"3. 什么是http的请求体？","slug":"_3-什么是http的请求体","link":"#_3-什么是http的请求体","children":[]},{"level":3,"title":"4. http的响应报文有哪些？","slug":"_4-http的响应报文有哪些","link":"#_4-http的响应报文有哪些","children":[]},{"level":3,"title":"5. http和https的区别？","slug":"_5-http和https的区别","link":"#_5-http和https的区别","children":[]},{"level":3,"title":"6. HTTPS工作原理","slug":"_6-https工作原理","link":"#_6-https工作原理","children":[]},{"level":3,"title":"7. 一次完整的HTTP请求所经历几个步骤?","slug":"_7-一次完整的http请求所经历几个步骤","link":"#_7-一次完整的http请求所经历几个步骤","children":[]},{"level":3,"title":"8. 常用HTTP状态码是怎么分类的，有哪些常见的状态码？","slug":"_8-常用http状态码是怎么分类的-有哪些常见的状态码","link":"#_8-常用http状态码是怎么分类的-有哪些常见的状态码","children":[]},{"level":3,"title":"9. Http协议中有那些请求方式","slug":"_9-http协议中有那些请求方式","link":"#_9-http协议中有那些请求方式","children":[]},{"level":3,"title":"10. GET方法与POST方法的区别","slug":"_10-get方法与post方法的区别","link":"#_10-get方法与post方法的区别","children":[]},{"level":3,"title":"11. http版本的对比","slug":"_11-http版本的对比","link":"#_11-http版本的对比","children":[]},{"level":3,"title":"12. 什么是对称加密与非对称加密","slug":"_12-什么是对称加密与非对称加密","link":"#_12-什么是对称加密与非对称加密","children":[]},{"level":3,"title":"13. cookie和session对于HTTP有什么用？","slug":"_13-cookie和session对于http有什么用","link":"#_13-cookie和session对于http有什么用","children":[]},{"level":3,"title":"14. 什么是cookie","slug":"_14-什么是cookie","link":"#_14-什么是cookie","children":[]},{"level":3,"title":"15. 什么是session","slug":"_15-什么是session","link":"#_15-什么是session","children":[]}]}],"git":{"createdTime":1693922657000,"updatedTime":1693922657000,"contributors":[{"name":"bincooo","email":"admin@bincooodeiMac.local","commits":1}]},"readingTime":{"minutes":37.54,"words":11263},"filePathRelative":"guide/markdown/Java面试宝典/TCP、UDP、Socket、Http网络编程面试题（47道含答案）.md","localizedDate":"2023年9月5日","excerpt":"<h3> 目录</h3>\\n<ul>\\n<li><a href=\\"#1__2\\">1. 什么是网络编程</a></li>\\n<li><a href=\\"#2__13\\">2. 网络编程中两个主要的问题</a></li>\\n<li><a href=\\"#3__25\\">3. 网络协议是什么</a></li>\\n<li><a href=\\"#4__29\\">4. 为什么要对网络协议分层</a></li>\\n<li><a href=\\"#5__35\\">5. 计算机网络体系结构</a></li>\\n<li>\\n<ul>\\n<li><a href=\\"#1_TCP__UDP_59\\">1 TCP / UDP</a></li>\\n<li>\\n<ul>\\n<li><a href=\\"#11_TCPIPUDP_60\\">1.1 什么是TCP/IP和UDP</a></li>\\n<li><a href=\\"#12_TCPUDP_67\\">1.2 TCP与UDP区别：</a></li>\\n<li><a href=\\"#13_TCPUDP_79\\">1.3 TCP和UDP的应用场景：</a></li>\\n<li><a href=\\"#14_TCPUDP_84\\">1.4 形容一下TCP和UDP</a></li>\\n<li><a href=\\"#15_TCP_UDP_92\\">1.5 运行在TCP 或UDP的应用层协议分析。</a></li>\\n<li><a href=\\"#16_ARP_Address_Resolution_Protocol_112\\">1.6 什么是ARP协议 (Address Resolution Protocol)？</a></li>\\n<li><a href=\\"#17_NAT_Network_Address_Translation__125\\">1.7 什么是NAT (Network Address Translation, 网络地址转换)？</a></li>\\n<li><a href=\\"#18__129\\">1.8 从输入址到获得页面的过程?</a></li>\\n<li><a href=\\"#19_TCP_144\\">1.9 TCP的三次握手</a></li>\\n<li>\\n<ul>\\n<li><a href=\\"#191_TCP_145\\">1.9.1 什么是TCP的三次握手</a></li>\\n<li><a href=\\"#192__149\\">1.9.2 三次握手的具体细节</a></li>\\n<li><a href=\\"#193__165\\">1.9.3 用现实理解三次握手的具体细节</a></li>\\n<li><a href=\\"#194__174\\">1.9.4 建立连接可以两次握手吗？为什么?</a></li>\\n<li><a href=\\"#195__188\\">1.9.5 可以采用四次握手吗？为什么？</a></li>\\n<li><a href=\\"#196_ACK_191\\">1.9.6 第三次握手中，如果客户端的ACK未送达服务器，会怎样？</a></li>\\n<li><a href=\\"#197__199\\">1.9.7 如果已经建立了连接，但客户端出现了故障怎么办？</a></li>\\n<li><a href=\\"#198__204\\">1.9.8 初始序列号是什么？</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#110_TCP_212\\">1.10 TCP的四次挥手</a></li>\\n<li>\\n<ul>\\n<li><a href=\\"#1101_TCP_213\\">1.10.1 什么是TCP的四次挥手</a></li>\\n<li><a href=\\"#1102__216\\">1.10.2 四次挥手的具体细节</a></li>\\n<li><a href=\\"#1103_TCP_227\\">1.10.3 用现实理解三次握手的具体细节TCP的四次挥手</a></li>\\n<li><a href=\\"#1104_ACKFINCLOSE_WAIT_235\\">1.10.4 为什么不能把服务器发送的ACK和FIN合并起来，变成三次挥手（CLOSE_WAIT状态意义是什么）？</a></li>\\n<li><a href=\\"#1105_ACK_239\\">1.10.5 如果第二次挥手时服务器的ACK没有送达客户端，会怎样？</a></li>\\n<li><a href=\\"#1106_TIME_WAIT_242\\">1.10.6 客户端TIME_WAIT状态的意义是什么？</a></li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li><a href=\\"#2_Socket_250\\">2 Socket</a></li>\\n<li>\\n<ul>\\n<li><a href=\\"#1_Socket_251\\">1 什么是Socket</a></li>\\n<li><a href=\\"#2_socket_261\\">2 socket属于网络的那个层面</a></li>\\n<li><a href=\\"#3_Socket_267\\">3 Socket通讯的过程</a></li>\\n<li><a href=\\"#4_TCPSocket_277\\">4 TCP协议Socket代码示例：</a></li>\\n<li><a href=\\"#5_UDPSocket_350\\">5 UDP协议Socket代码示例：</a></li>\\n<li><a href=\\"#6_Socket_405\\">6 Socket的常用类</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#3_HTTP_415\\">3. HTTP</a></li>\\n<li>\\n<ul>\\n<li><a href=\\"#1_Http_416\\">1. 什么是Http协议？</a></li>\\n<li><a href=\\"#2_Sockethttp_421\\">2. Socket和http的区别和应用场景</a></li>\\n<li><a href=\\"#3_http_428\\">3. 什么是http的请求体？</a></li>\\n<li><a href=\\"#4_http_436\\">4. http的响应报文有哪些？</a></li>\\n<li><a href=\\"#5_httphttps_440\\">5. http和https的区别？</a></li>\\n<li><a href=\\"#6_HTTPS_449\\">6. HTTPS工作原理</a></li>\\n<li><a href=\\"#7_HTTP_458\\">7. 一次完整的HTTP请求所经历几个步骤?</a></li>\\n<li><a href=\\"#8_HTTP_479\\">8. 常用HTTP状态码是怎么分类的，有哪些常见的状态码？</a></li>\\n<li><a href=\\"#9_Http_509\\">9. Http协议中有那些请求方式</a></li>\\n<li><a href=\\"#10_GETPOST_521\\">10. GET方法与POST方法的区别</a></li>\\n<li><a href=\\"#11_http_528\\">11. http版本的对比</a></li>\\n<li><a href=\\"#12__548\\">12. 什么是对称加密与非对称加密</a></li>\\n<li><a href=\\"#13_cookiesessionHTTP_556\\">13. cookie和session对于HTTP有什么用？</a></li>\\n<li><a href=\\"#14_cookie_559\\">14. 什么是cookie</a></li>\\n<li><a href=\\"#15_session_563\\">15. 什么是session</a></li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}');export{l as data};
